[{"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\index.js":"1","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\App.js":"2","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\reportWebVitals.js":"3","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\redux\\modules\\index.js":"4","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\pages\\MainPage.js":"5","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\pages\\RedirectPage.js":"6","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\pages\\ModifyAccountPage.js":"7","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\containers\\BookingContainer.js":"8","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\containers\\SearchContainer.js":"9","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\redux\\modules\\loading.js":"10","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\containers\\MainContainer.js":"11","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\containers\\RoomDetailContainer.js":"12","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\containers\\ModifyAccountContainer.js":"13","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\redux\\modules\\accommodations.js":"14","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\redux\\modules\\reservation.js":"15","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\containers\\TripListContainer.js":"16","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\booking\\BookingTemplate.jsx":"17","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\redux\\lib\\createRequestSaga.js":"18","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\common\\Modal.jsx":"19","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\RoomDetailTemplate.jsx":"20","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\redux\\lib\\api\\reservations.js":"21","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\booking\\BookingDetailTemplate.jsx":"22","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\booking\\BookingTitle.jsx":"23","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\booking\\BookingBanner.jsx":"24","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\booking\\BookingInfo.jsx":"25","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\booking\\BookingRefundRule.jsx":"26","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\booking\\BookingBorder.jsx":"27","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\booking\\BookingDateEditModal.jsx":"28","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\common\\CommonChoiceModal.jsx":"29","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\common\\CommonSuccessModal.jsx":"30","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\trip\\TripTemplate.jsx":"31","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\booking\\BookingGuestEditModal.jsx":"32","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\booking\\BookingButton.jsx":"33","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\common\\Button.jsx":"34","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\Introduction.jsx":"35","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\Photos.jsx":"36","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\CalendarDetail.jsx":"37","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\Icons.jsx":"38","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\Title.jsx":"39","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\Description.jsx":"40","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\ThingsToKnow.jsx":"41","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\Beds.jsx":"42","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\Map.jsx":"43","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\Host.jsx":"44","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\Reviews.jsx":"45","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\Payment.jsx":"46","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\common\\Carousel.jsx":"47","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\booking\\BookingPaymentInfo.jsx":"48","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\trip\\TripReservation.jsx":"49","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\booking\\BookingRoomInfo.jsx":"50","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\common\\Calendar.jsx":"51","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\trip\\TripCard.jsx":"52","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\assets\\svg.js":"53","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\ReviewProfile.jsx":"54","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\trip\\TripReviewRating.jsx":"55","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\assets\\Svg.js":"56","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\RoomDetailHeader.jsx":"57","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\redux\\modules\\roomDetail.js":"58","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\redux\\lib\\api\\roomDetail.js":"59","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\common\\MultipleCarousel.jsx":"60","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\redux\\lib\\api\\review.js":"61","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\trip\\TripReviewGetModal.jsx":"62","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\trip\\TripReviewPostModal.jsx":"63","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\RoomDetailSafetyModal.jsx":"64","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\redux\\modules\\auth.js":"65","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\RoomDetailGuestEditPopup.jsx":"66","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\RoomDetailReviewModal.jsx":"67","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\containers\\CommonHeaderContainer.js":"68","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\redux\\lib\\api\\auth.js":"69","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\common\\CommonHeader.jsx":"70","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\pages\\roomDetailPage.js":"71","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\pages\\TripListPage.js":"72","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\search\\SearchTemplate.jsx":"73","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\main\\Main.jsx":"74","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\modify\\ModifyAccount.jsx":"75","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\search\\AccommList.jsx":"76","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\search\\Pagination.jsx":"77","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\search\\AccommTypeMenu.jsx":"78","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\search\\ChargeMenu.jsx":"79","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\search\\MapPopup.jsx":"80","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\search\\RecentSearch.jsx":"81","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\search\\SearchMap.jsx":"82","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\main\\MainCity.jsx":"83","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\main\\MainRecommendation.jsx":"84","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\modify\\ModifyInput.jsx":"85","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\modify\\ModifyContent.jsx":"86","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\main\\HeaderLogo.jsx":"87","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\modify\\ModifyDescription.jsx":"88","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\main\\HeaderUser.jsx":"89","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\search\\Checkbox.jsx":"90","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\search\\RoomCharge.jsx":"91","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\search\\RangeSlider.jsx":"92","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\main\\AuthModal.jsx":"93","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\search\\BarChart.jsx":"94","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\search\\Components.jsx":"95","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\main\\SocialRegisterForm.jsx":"96","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\main\\RegisterModal.jsx":"97","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\main\\RegisterForm.jsx":"98","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\main\\LoginModal.jsx":"99","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\pages\\RoomDetailPage.js":"100","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\pages\\WishListPage.js":"101","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\containers\\WishListContainer.js":"102","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\redux\\modules\\bookmark.js":"103","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\redux\\modules\\payment.js":"104","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\redux\\lib\\api\\bookmark.js":"105","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\redux\\lib\\api\\prices.js":"106","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\redux\\lib\\api\\search.js":"107","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\wishList\\WishListTemplate.jsx":"108","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\containers\\AccommodationContainer.js":"109","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\RoomDetailDateEditPopup.jsx":"110","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\wishList\\WishListCard.jsx":"111","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\common\\AccommodationHeader.jsx":"112","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\common\\AccommodationSearchHeader.jsx":"113","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\common\\SocialRegisterModal.jsx":"114","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\main\\HeaderSearch.jsx":"115","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\common\\HeaderGuestEditModal.jsx":"116","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\main\\HeaderCalendar.jsx":"117","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\RoomDetailRefundModal.jsx":"118","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\modify\\ModifyHeader.jsx":"119","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\main\\RecommendPopup.jsx":"120","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\common\\CommonFooter.jsx":"121","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\containers\\SimpleHeaderContainer.js":"122","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\main\\MainFooter.jsx":"123","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\common\\SimpleHeader.jsx":"124","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\modify\\ModifyDisabledModal.jsx":"125"},{"size":1204,"mtime":1614177776181,"results":"126","hashOfConfig":"127"},{"size":1170,"mtime":1614177776084,"results":"128","hashOfConfig":"127"},{"size":362,"mtime":1612145217164,"results":"129","hashOfConfig":"127"},{"size":882,"mtime":1614171915100,"results":"130","hashOfConfig":"127"},{"size":340,"mtime":1614171915060,"results":"131","hashOfConfig":"127"},{"size":1389,"mtime":1614216130117,"results":"132","hashOfConfig":"127"},{"size":394,"mtime":1614171915062,"results":"133","hashOfConfig":"127"},{"size":2543,"mtime":1613971886257,"results":"134","hashOfConfig":"127"},{"size":954,"mtime":1614216130113,"results":"135","hashOfConfig":"127"},{"size":1172,"mtime":1612970822163,"results":"136","hashOfConfig":"127"},{"size":542,"mtime":1614171915042,"results":"137","hashOfConfig":"127"},{"size":1481,"mtime":1614218442211,"results":"138","hashOfConfig":"127"},{"size":8583,"mtime":1614228755795,"results":"139","hashOfConfig":"127"},{"size":1467,"mtime":1614171915091,"results":"140","hashOfConfig":"127"},{"size":2160,"mtime":1614171915104,"results":"141","hashOfConfig":"127"},{"size":1664,"mtime":1613662862771,"results":"142","hashOfConfig":"127"},{"size":4628,"mtime":1614216130052,"results":"143","hashOfConfig":"127"},{"size":1280,"mtime":1614177777021,"results":"144","hashOfConfig":"127"},{"size":156,"mtime":1613271056680,"results":"145","hashOfConfig":"127"},{"size":6880,"mtime":1614191349239,"results":"146","hashOfConfig":"127"},{"size":1568,"mtime":1614218480805,"results":"147","hashOfConfig":"127"},{"size":767,"mtime":1613971886162,"results":"148","hashOfConfig":"127"},{"size":1548,"mtime":1613971886214,"results":"149","hashOfConfig":"127"},{"size":693,"mtime":1613971886143,"results":"150","hashOfConfig":"127"},{"size":1964,"mtime":1613971886172,"results":"151","hashOfConfig":"127"},{"size":2303,"mtime":1613662862686,"results":"152","hashOfConfig":"127"},{"size":141,"mtime":1612510936632,"results":"153","hashOfConfig":"127"},{"size":5733,"mtime":1614171914905,"results":"154","hashOfConfig":"127"},{"size":1458,"mtime":1614226762383,"results":"155","hashOfConfig":"127"},{"size":1083,"mtime":1613662862707,"results":"156","hashOfConfig":"127"},{"size":2531,"mtime":1614216130100,"results":"157","hashOfConfig":"127"},{"size":14500,"mtime":1614171914906,"results":"158","hashOfConfig":"127"},{"size":2834,"mtime":1613971886148,"results":"159","hashOfConfig":"127"},{"size":1684,"mtime":1614191349221,"results":"160","hashOfConfig":"127"},{"size":1234,"mtime":1613662862722,"results":"161","hashOfConfig":"127"},{"size":1296,"mtime":1613802581006,"results":"162","hashOfConfig":"127"},{"size":3723,"mtime":1614191349227,"results":"163","hashOfConfig":"127"},{"size":2676,"mtime":1613264603824,"results":"164","hashOfConfig":"127"},{"size":1991,"mtime":1614225136574,"results":"165","hashOfConfig":"127"},{"size":309,"mtime":1613264603819,"results":"166","hashOfConfig":"127"},{"size":4749,"mtime":1613271801490,"results":"167","hashOfConfig":"127"},{"size":838,"mtime":1613264603813,"results":"168","hashOfConfig":"127"},{"size":2457,"mtime":1613662862725,"results":"169","hashOfConfig":"127"},{"size":2633,"mtime":1613264603822,"results":"170","hashOfConfig":"127"},{"size":7311,"mtime":1614184849898,"results":"171","hashOfConfig":"127"},{"size":6871,"mtime":1614171914965,"results":"172","hashOfConfig":"127"},{"size":2362,"mtime":1613264603807,"results":"173","hashOfConfig":"127"},{"size":1921,"mtime":1613971886192,"results":"174","hashOfConfig":"127"},{"size":635,"mtime":1612970822128,"results":"175","hashOfConfig":"127"},{"size":2276,"mtime":1613971886199,"results":"176","hashOfConfig":"127"},{"size":2225,"mtime":1614171914914,"results":"177","hashOfConfig":"127"},{"size":5963,"mtime":1613971886247,"results":"178","hashOfConfig":"127"},{"size":13203,"mtime":1614177776088,"results":"179","hashOfConfig":"127"},{"size":751,"mtime":1613662862731,"results":"180","hashOfConfig":"127"},{"size":1229,"mtime":1613458078747,"results":"181","hashOfConfig":"127"},{"size":11591,"mtime":1613033979401,"results":"182","hashOfConfig":"183"},{"size":1905,"mtime":1614191349233,"results":"184","hashOfConfig":"127"},{"size":1486,"mtime":1614171915106,"results":"185","hashOfConfig":"127"},{"size":332,"mtime":1614177777018,"results":"186","hashOfConfig":"127"},{"size":3085,"mtime":1614171914918,"results":"187","hashOfConfig":"127"},{"size":760,"mtime":1614216130128,"results":"188","hashOfConfig":"127"},{"size":2065,"mtime":1613662862751,"results":"189","hashOfConfig":"127"},{"size":3402,"mtime":1613264603856,"results":"190","hashOfConfig":"127"},{"size":3020,"mtime":1614191349237,"results":"191","hashOfConfig":"127"},{"size":7072,"mtime":1614216130133,"results":"192","hashOfConfig":"127"},{"size":14808,"mtime":1614191349231,"results":"193","hashOfConfig":"127"},{"size":5857,"mtime":1614191349235,"results":"194","hashOfConfig":"127"},{"size":9264,"mtime":1614216130108,"results":"195","hashOfConfig":"127"},{"size":1684,"mtime":1614228491787,"results":"196","hashOfConfig":"127"},{"size":7758,"mtime":1614216130061,"results":"197","hashOfConfig":"127"},{"size":456,"mtime":1614065343647,"results":"198","hashOfConfig":"183"},{"size":370,"mtime":1614171915072,"results":"199","hashOfConfig":"127"},{"size":5773,"mtime":1614216130097,"results":"200","hashOfConfig":"127"},{"size":10108,"mtime":1614216130071,"results":"201","hashOfConfig":"127"},{"size":8148,"mtime":1614229663730,"results":"202","hashOfConfig":"127"},{"size":4551,"mtime":1614216130078,"results":"203","hashOfConfig":"127"},{"size":1429,"mtime":1614216130087,"results":"204","hashOfConfig":"127"},{"size":4686,"mtime":1614171915008,"results":"205","hashOfConfig":"127"},{"size":1980,"mtime":1614216130083,"results":"206","hashOfConfig":"127"},{"size":1793,"mtime":1614216130085,"results":"207","hashOfConfig":"127"},{"size":870,"mtime":1614177776162,"results":"208","hashOfConfig":"127"},{"size":4398,"mtime":1614218386753,"results":"209","hashOfConfig":"127"},{"size":435,"mtime":1614171914936,"results":"210","hashOfConfig":"127"},{"size":380,"mtime":1614171914937,"results":"211","hashOfConfig":"127"},{"size":1961,"mtime":1614229676442,"results":"212","hashOfConfig":"127"},{"size":625,"mtime":1614226302408,"results":"213","hashOfConfig":"127"},{"size":366,"mtime":1614171914927,"results":"214","hashOfConfig":"127"},{"size":2224,"mtime":1614171914956,"results":"215","hashOfConfig":"127"},{"size":768,"mtime":1614171914932,"results":"216","hashOfConfig":"127"},{"size":1419,"mtime":1614171915014,"results":"217","hashOfConfig":"127"},{"size":1059,"mtime":1614081190978,"results":"218","hashOfConfig":"183"},{"size":4969,"mtime":1614216130089,"results":"219","hashOfConfig":"127"},{"size":1085,"mtime":1614216130064,"results":"220","hashOfConfig":"127"},{"size":1125,"mtime":1614216130080,"results":"221","hashOfConfig":"127"},{"size":5461,"mtime":1614171915016,"results":"222","hashOfConfig":"127"},{"size":2773,"mtime":1614171914944,"results":"223","hashOfConfig":"127"},{"size":2334,"mtime":1614171914940,"results":"224","hashOfConfig":"127"},{"size":6803,"mtime":1614191422688,"results":"225","hashOfConfig":"127"},{"size":3207,"mtime":1614216130069,"results":"226","hashOfConfig":"127"},{"size":386,"mtime":1614172133637,"results":"227","hashOfConfig":"127"},{"size":370,"mtime":1614171915074,"results":"228","hashOfConfig":"127"},{"size":761,"mtime":1614171915051,"results":"229","hashOfConfig":"127"},{"size":1260,"mtime":1614171915098,"results":"230","hashOfConfig":"127"},{"size":1205,"mtime":1614171915102,"results":"231","hashOfConfig":"127"},{"size":684,"mtime":1614171915078,"results":"232","hashOfConfig":"127"},{"size":144,"mtime":1614216130122,"results":"233","hashOfConfig":"127"},{"size":216,"mtime":1614216130130,"results":"234","hashOfConfig":"127"},{"size":1313,"mtime":1614216130102,"results":"235","hashOfConfig":"127"},{"size":7971,"mtime":1614216130105,"results":"236","hashOfConfig":"127"},{"size":5447,"mtime":1614191349229,"results":"237","hashOfConfig":"127"},{"size":2308,"mtime":1614171915033,"results":"238","hashOfConfig":"127"},{"size":7412,"mtime":1614216130054,"results":"239","hashOfConfig":"127"},{"size":12381,"mtime":1614216130056,"results":"240","hashOfConfig":"127"},{"size":4326,"mtime":1614177776112,"results":"241","hashOfConfig":"127"},{"size":18799,"mtime":1614216130067,"results":"242","hashOfConfig":"127"},{"size":13607,"mtime":1614177776109,"results":"243","hashOfConfig":"127"},{"size":2462,"mtime":1614171914926,"results":"244","hashOfConfig":"127"},{"size":5317,"mtime":1614177776149,"results":"245","hashOfConfig":"127"},{"size":6318,"mtime":1614191422696,"results":"246","hashOfConfig":"127"},{"size":1156,"mtime":1614177776126,"results":"247","hashOfConfig":"127"},{"size":2156,"mtime":1614216130058,"results":"248","hashOfConfig":"127"},{"size":6261,"mtime":1614216130115,"results":"249","hashOfConfig":"127"},{"size":2256,"mtime":1614216130073,"results":"250","hashOfConfig":"127"},{"size":6035,"mtime":1614216130062,"results":"251","hashOfConfig":"127"},{"size":1912,"mtime":1614228137726,"results":"252","hashOfConfig":"127"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},"16103k6",{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"255"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"255"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"255"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"255"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"255"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"255"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"255"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"heu68v",{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"255"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"255"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"255"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"406"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"255"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"416","messages":"417","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"255"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"255"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"255"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"443"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"443"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"453"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"255"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"465"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"255"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"493","usedDeprecatedRules":"255"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502","usedDeprecatedRules":"255"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505","usedDeprecatedRules":"255"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"255"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\index.js",[],["529","530"],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\App.js",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\reportWebVitals.js",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\redux\\modules\\index.js",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\pages\\MainPage.js",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\pages\\RedirectPage.js",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\pages\\ModifyAccountPage.js",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\containers\\BookingContainer.js",["531","532"],"import React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport queryStirng from 'query-string';\nimport BookingTemplate from '../components/booking/BookingTemplate';\nimport { useSelector } from 'react-redux';\n\nconst BookingContainer = () => {\n  // 숙소 정보를 roomDetail 리듀서에서 꺼내온다\n  const { accommodations } = useSelector(({ roomDetail }) => ({\n    accommodations: roomDetail.accommodation,\n  }));\n\n  // roomDetail 리듀서가 있다면 리듀서에서 없다면 localStorage에서 숙소 정보를 받아온다\n  const accommodationInfo = accommodations.id\n    ? accommodations\n    : JSON.parse(localStorage.getItem('accommodationInfo'));\n\n  // 최초 렌더링 이후 해당 숙소 정보를 localStorage에 저장\n  localStorage.setItem('accommodationInfo', JSON.stringify(accommodationInfo));\n\n  const location = useLocation();\n  // 쿼리에 저장된 예약번호를 Number로 변경하여 가져온다\n  const reservationId = +queryStirng.parse(location.search).reservationId;\n\n  // reservation, error, loading 상태를 가져온다\n  const { reservations, error, loading } = useSelector(\n    ({ reservation, loading }) => ({\n      reservations: reservation.reservations,\n      error: reservation.error,\n      loading: loading['reservation/DELETERESERVATION'],\n    }),\n  );\n\n  // reservations 리듀서가 있다면 저장된 예약 중 일치하는 숙소의 정보를 받아온다 없다면 localStorage에서 숙소 정보를 받아온다\n  const reservationInfo = reservations\n    ? reservations.filter(\n        reservation => reservation.reservationId === reservationId,\n      )[0]\n    : JSON.parse(localStorage.getItem('modifyreservation'));\n\n  // 최초 렌더링 이후 해당 숙소 정보를 localStorage에 저장\n  localStorage.setItem('modifyreservation', JSON.stringify(reservationInfo));\n\n  // 모달창 상태\n  const [visible, setVisible] = useState({\n    state: false,\n    type: null,\n  });\n\n  // 모달 열기\n  const showModal = type => {\n    setVisible({ ...visible, state: true, type });\n  };\n\n  // 모달 숨기기\n  const hideModal = ({ target }) => {\n    if (target.dataset.name) {\n      setVisible({ ...visible, state: false });\n    }\n  };\n\n  return (\n    <BookingTemplate\n      visible={visible}\n      showModal={showModal}\n      hideModal={hideModal}\n      reservationInfo={reservationInfo}\n      setVisible={setVisible}\n      reservationId={reservationId}\n      accommodationInfo={accommodationInfo}\n    />\n  );\n};\n\nexport default BookingContainer;\n","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\containers\\SearchContainer.js",["533"],"import React, { useEffect } from 'react';\nimport SearchTemplate from '../components/search/SearchTemplate';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAccommList } from '../redux/modules/accommodations';\nimport { useLocation } from 'react-router-dom';\nimport { getPricesAction } from '../redux/modules/payment';\n\nconst SearchContainer = () => {\n  const accommodations = useSelector(state => state.accommodations);\n  const loading = useSelector(state => state.loading['search/GET_ACCOMM_LIST']);\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const url = new URL(window.location.href);\n\n  useEffect(() => {\n    dispatch(getAccommList(url.pathname + url.search));\n    dispatch(getPricesAction(url.search));\n  }, [dispatch, url.pathname, url.search]);\n\n  return (\n    <SearchTemplate\n      accommodations={accommodations.accommodations}\n      loading={loading}\n    />\n  );\n};\n\nexport default SearchContainer;\n","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\redux\\modules\\loading.js",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\containers\\MainContainer.js",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\containers\\RoomDetailContainer.js",["534"],"import React, { useEffect} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport RoomDetailTemplate from '../components/roomDetail/RoomDetailTemplate';\r\nimport { readRoomDetail } from '../redux/modules/roomDetail';\r\nimport { postBookmark, deleteBookmark } from '../redux/lib/api/bookmark';\r\n\r\nconst RoomDetailContainer = () => {\r\n  const { accommodation, accommodationError, loading } = useSelector(\r\n    ({ roomDetail, loading }) => ({\r\n      accommodation: roomDetail.accommodation,\r\n      accommodationError: roomDetail.accommodationError,\r\n      loading: loading['roomDetail/READ_ROOMDETAIL'],\r\n    }),\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n  // url의 accommodation_id 가져오기\r\n  const { accommodation_id } = useParams();\r\n\r\n  useEffect(() => {\r\n    dispatch(readRoomDetail(accommodation_id));\r\n    }, [dispatch, accommodation_id]);\r\n\r\n  // 북마크 등록 (POST)\r\n  const postBookmarkRoom = async accommodation_id => {\r\n    await postBookmark(accommodation_id);\r\n  };\r\n\r\n  // 북마크 제거 (DELETE)\r\n  const deleteBookmarkedRoom = async accommodation_id => {\r\n    await deleteBookmark(accommodation_id);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <RoomDetailTemplate\r\n        accommodation={accommodation}\r\n        loading={loading}\r\n        postBookmark={postBookmarkRoom}\r\n        deleteBookmark={deleteBookmarkedRoom}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomDetailContainer;\r\n","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\containers\\ModifyAccountContainer.js",["535","536"],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\redux\\modules\\accommodations.js",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\redux\\modules\\reservation.js",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\containers\\TripListContainer.js",["537","538"],"import React, { useEffect, useState } from 'react';\nimport TripTemplate from '../components/trip/TripTemplate';\nimport { useDispatch, useSelector } from 'react-redux';\nimport reservation, { readReservation } from '../redux/modules/reservation';\nimport dayjs from 'dayjs';\n\nconst TripListContainer = () => {\n  // dispatch 함수\n  const dispatch = useDispatch();\n\n  // reservation, error, loading 상태를 가져온다\n  const { reservations, error, loading } = useSelector(\n    ({ reservation, loading }) => ({\n      reservations: reservation.reservations,\n      error: reservation.error,\n      loading: loading['reservation/GETRESERVATION'],\n    }),\n  );\n\n  // 리뷰 상태\n  const [reviewStatus, setReviewStatus] = useState(false);\n\n  // 오늘 날짜\n  const today = dayjs().format('YYYY-MM-DD');\n\n  // 오늘 날짜와 체크아웃 날짜를 기준으로 예정된 예약 및 이전 예약 구분\n  let pastReservations = [];\n  let upcomingReservations = [];\n\n  // 예약 리스트 읽기 요청 GET\n  useEffect(() => {\n    dispatch(readReservation());\n  }, [dispatch, reviewStatus]);\n\n  // 로딩이 완료되면 날짜에 따라 필터링\n  if (loading === false) {\n    pastReservations = reservations.filter(\n      reservation => reservation.checkoutDate < today,\n    );\n    upcomingReservations = reservations.filter(\n      reservation => reservation.checkoutDate > today,\n    );\n  }\n\n  return (\n    <TripTemplate\n      loading={loading}\n      pastReservations={pastReservations}\n      upcomingReservations={upcomingReservations}\n      reviewStatus={reviewStatus}\n      setReviewStatus={setReviewStatus}\n    />\n  );\n};\n\nexport default TripListContainer;\n","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\booking\\BookingTemplate.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\redux\\lib\\createRequestSaga.js",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\common\\Modal.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\RoomDetailTemplate.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\redux\\lib\\api\\reservations.js",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\booking\\BookingDetailTemplate.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\booking\\BookingTitle.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\booking\\BookingBanner.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\booking\\BookingInfo.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\booking\\BookingRefundRule.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\booking\\BookingBorder.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\booking\\BookingDateEditModal.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\common\\CommonChoiceModal.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\common\\CommonSuccessModal.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\trip\\TripTemplate.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\booking\\BookingGuestEditModal.jsx",["539"],"import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport SVG from '../../assets/svg';\nimport { IconButton } from '../common/Button';\n\nconst BookingGuestEditModal = ({ hideModal, setVisible, query }) => {\n  const { adultNum, childNum, infantNum } = query;\n\n  // 게스트 상태\n  const [count, setCount] = useState({\n    adultNum: +adultNum,\n    childNum: +childNum,\n    infantNum: +infantNum,\n    status: false,\n  });\n\n  // 게스트 증가 함수\n  const increaseGuestNum = type => {\n    if (type === 'adultNum' && count.adultNum === 5) return;\n    else if (type === 'childNum' && count.childNum === 5) return;\n    else if (type === 'infantNum' && count.infantNum === 5) return;\n\n    setCount({ ...count, [type]: count[type] + 1, status: true });\n  };\n\n  // 게스트 감소 함수\n  const decreaseGuestNum = type => {\n    if (count[type] === 0) return;\n    setCount({ ...count, [type]: count[type] - 1 });\n    // 어른이 0명이 되면 어린이와 아이 인원 초기화\n    if (count.adultNum === 1) {\n      setCount({\n        adultNum: 0,\n        childNum: 0,\n        infantNum: 0,\n      });\n    }\n  };\n\n  // 현재 url\n  const url = new URL(window.location.href);\n\n  const history = useHistory();\n\n  // 게스트 모달창 저장하기 클릭 시 쿼리 변경 및 모달 끄기\n  const modifyGuest = () => {\n    url.searchParams.set(\n      'totalGuestNum',\n      count.adultNum + count.childNum + count.infantNum,\n    );\n    url.searchParams.set('adultNum', count.adultNum);\n    url.searchParams.set('childNum', count.childNum);\n    url.searchParams.set('infantNum', count.infantNum);\n    history.push(url.search);\n    setVisible(false);\n  };\n\n  return (\n    <div\n      data-name=\"modal\"\n      onClick={hideModal}\n      className=\"w-screen h-screen flex justify-center items-center bg-modal text-white fixed top-0\"\n    >\n      <div\n        className=\"w-38rem pt-5.6rem bg-white relative top-0 \n        overflow-y-auto flex flex-col text-black rounded-3xl border border-#b0b0b0\"\n      >\n        <button\n          data-name=\"close\"\n          className=\"flex w-3.6rem h-3.6rem absolute top-5 left-5 justify-center items-center rounded-50% hover:bg-#f7f7f7\"\n        >\n          <img\n            data-name=\"close\"\n            src=\"/img/close.png\"\n            alt=\"#\"\n            className=\"w-1.8rem h-1.8rem\"\n          />\n        </button>\n        <div className=\"px-2.4rem\">\n          <h3 className=\"text-2.2rem text-#484848 font-semibold\">게스트</h3>\n          <ul className=\"pt-0.8rem\">\n            <li className=\"mt-2.4rem text-1.6rem flex justify-between\">\n              <div className=\"text-1.6rem text-#484848 font-semibold\">성인</div>\n              <div className=\"flex items-center justify-between w-10.4rem h-3.2rem\">\n                {count.adultNum === 0 ? (\n                  <button\n                    onClick={() => decreaseGuestNum('adultNum')}\n                    className=\"w-3.2rem h-3.2rem flex justify-center items-center rounded-50% border text-#rgb235 cursor-not-allowed\"\n                    disabled=\"true\"\n                  >\n                    <div className=\"w-2.2rem h-2.2rem p-2\">\n                      <SVG\n                        name=\"minus\"\n                        viewBox=\"0 0 32 32\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"12px\"\n                        height=\"12px\"\n                        stroke=\"currentcolor\"\n                        strokeWidth=\"5.33333\"\n                      />\n                    </div>\n                  </button>\n                ) : (\n                  <button\n                    onClick={() => decreaseGuestNum('adultNum')}\n                    className=\"w-3.2rem h-3.2rem flex justify-center items-center rounded-50% border border-#rgb176 text-#rgb113 cursor-pointer hover:border-black hover:text-black\"\n                  >\n                    <div className=\"w-2.2rem h-2.2rem p-2\">\n                      <SVG\n                        name=\"minus\"\n                        viewBox=\"0 0 32 32\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"12px\"\n                        height=\"12px\"\n                        stroke=\"currentcolor\"\n                        strokeWidth=\"5.33333\"\n                      />\n                    </div>\n                  </button>\n                )}\n                <span className=\"text-1.6rem\">{count.adultNum}</span>\n                {count.adultNum === 5 ? (\n                  <button\n                    onClick={() => increaseGuestNum('adultNum')}\n                    className=\"w-3.2rem h-3.2rem flex justify-center items-center rounded-50% border text-#rgb235 cursor-not-allowed\"\n                    disabled=\"true\"\n                  >\n                    <div className=\"w-2.2rem h-2.2rem p-2\">\n                      <SVG\n                        name=\"plus\"\n                        viewBox=\"0 0 32 32\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"12px\"\n                        height=\"12px\"\n                        stroke=\"currentcolor\"\n                        strokeWidth=\"5.33333\"\n                      />\n                    </div>\n                  </button>\n                ) : (\n                  <button\n                    onClick={() => increaseGuestNum('adultNum')}\n                    className=\"w-3.2rem h-3.2rem flex justify-center items-center rounded-50% border border-#rgb176 text-#rgb113 cursor-pointer hover:border-black hover:text-black\"\n                  >\n                    <div className=\"w-2.2rem h-2.2rem p-2\">\n                      <SVG\n                        name=\"plus\"\n                        viewBox=\"0 0 32 32\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"12px\"\n                        height=\"12px\"\n                        stroke=\"currentcolor\"\n                        strokeWidth=\"5.33333\"\n                      />\n                    </div>\n                  </button>\n                )}\n              </div>\n            </li>\n            <li className=\"mt-2.4rem flex justify-between items-center\">\n              <div>\n                <div className=\"text-1.6rem text-#484848 font-semibold\">\n                  어린이\n                </div>\n                <div className=\"text-1.4rem text-#484848\">2~12세</div>\n              </div>\n              <div className=\"flex items-center justify-between w-10.4rem h-3.2rem\">\n                {count.childNum === 0 || count.adultNum === 0 ? (\n                  <button\n                    onClick={() => decreaseGuestNum('childNum')}\n                    className=\"w-3.2rem h-3.2rem flex justify-center items-center rounded-50% border text-#rgb235 cursor-not-allowed\"\n                    disabled=\"true\"\n                  >\n                    <div className=\"w-2.2rem h-2.2rem p-2\">\n                      <SVG\n                        name=\"minus\"\n                        viewBox=\"0 0 32 32\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"12px\"\n                        height=\"12px\"\n                        stroke=\"currentcolor\"\n                        strokeWidth=\"5.33333\"\n                      />\n                    </div>\n                  </button>\n                ) : (\n                  <button\n                    onClick={() => decreaseGuestNum('childNum')}\n                    className=\"w-3.2rem h-3.2rem flex justify-center items-center rounded-50% border border-#rgb176 text-#rgb113 cursor-pointer hover:border-black hover:text-black\"\n                  >\n                    <div className=\"w-2.2rem h-2.2rem p-2\">\n                      <SVG\n                        name=\"minus\"\n                        viewBox=\"0 0 32 32\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"12px\"\n                        height=\"12px\"\n                        stroke=\"currentcolor\"\n                        strokeWidth=\"5.33333\"\n                      />\n                    </div>\n                  </button>\n                )}\n                <span className=\"text-1.6rem\">{count.childNum}</span>\n                {count.childNum === 5 || count.adultNum === 0 ? (\n                  <button\n                    onClick={() => increaseGuestNum('childNum')}\n                    className=\"w-3.2rem h-3.2rem flex justify-center items-center rounded-50% border text-#rgb235 cursor-not-allowed\"\n                    disabled=\"true\"\n                  >\n                    <div className=\"w-2.2rem h-2.2rem p-2\">\n                      <SVG\n                        name=\"plus\"\n                        viewBox=\"0 0 32 32\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"12px\"\n                        height=\"12px\"\n                        stroke=\"currentcolor\"\n                        strokeWidth=\"5.33333\"\n                      />\n                    </div>\n                  </button>\n                ) : (\n                  <button\n                    onClick={() => increaseGuestNum('childNum')}\n                    className=\"w-3.2rem h-3.2rem flex justify-center items-center rounded-50% border border-#rgb176 text-#rgb113 cursor-pointer hover:border-black hover:text-black\"\n                  >\n                    <div className=\"w-2.2rem h-2.2rem p-2\">\n                      <SVG\n                        name=\"plus\"\n                        viewBox=\"0 0 32 32\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"12px\"\n                        height=\"12px\"\n                        stroke=\"currentcolor\"\n                        strokeWidth=\"5.33333\"\n                      />\n                    </div>\n                  </button>\n                )}\n              </div>\n            </li>\n            <li className=\"my-2.4rem flex justify-between items-center\">\n              <div>\n                <div className=\"text-1.6rem text-#484848 font-semibold\">\n                  유아\n                </div>\n                <div className=\"text-1.4rem text-#484848\">2세 미만</div>\n              </div>\n              <div className=\"flex items-center justify-between w-10.4rem h-3.2rem\">\n                {count.infantNum === 0 || count.adultNum === 0 ? (\n                  <button\n                    onClick={() => decreaseGuestNum('infantNum')}\n                    className=\"w-3.2rem h-3.2rem flex justify-center items-center rounded-50% border text-#rgb235 cursor-not-allowed\"\n                    disabled=\"true\"\n                  >\n                    <div className=\"w-2.2rem h-2.2rem p-2\">\n                      <SVG\n                        name=\"minus\"\n                        viewBox=\"0 0 32 32\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"12px\"\n                        height=\"12px\"\n                        stroke=\"currentcolor\"\n                        strokeWidth=\"5.33333\"\n                      />\n                    </div>\n                  </button>\n                ) : (\n                  <button\n                    onClick={() => decreaseGuestNum('infantNum')}\n                    className=\"w-3.2rem h-3.2rem flex justify-center items-center rounded-50% border border-#rgb176 text-#rgb113 cursor-pointer hover:border-black hover:text-black\"\n                  >\n                    <div className=\"w-2.2rem h-2.2rem p-2\">\n                      <SVG\n                        name=\"minus\"\n                        viewBox=\"0 0 32 32\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"12px\"\n                        height=\"12px\"\n                        stroke=\"currentcolor\"\n                        strokeWidth=\"5.33333\"\n                      />\n                    </div>\n                  </button>\n                )}\n                <span className=\"text-1.6rem\">{count.infantNum}</span>\n                {count.infantNum === 5 || count.adultNum === 0 ? (\n                  <button\n                    onClick={() => increaseGuestNum('infantNum')}\n                    className=\"w-3.2rem h-3.2rem flex justify-center items-center rounded-50% border text-#rgb235 cursor-not-allowed\"\n                    disabled=\"true\"\n                  >\n                    <div className=\"w-2.2rem h-2.2rem p-2\">\n                      <SVG\n                        name=\"plus\"\n                        viewBox=\"0 0 32 32\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"12px\"\n                        height=\"12px\"\n                        stroke=\"currentcolor\"\n                        strokeWidth=\"5.33333\"\n                      />\n                    </div>\n                  </button>\n                ) : (\n                  <button\n                    onClick={() => increaseGuestNum('infantNum')}\n                    className=\"w-3.2rem h-3.2rem flex justify-center items-center rounded-50% border border-#rgb176 text-#rgb113 cursor-pointer hover:border-black hover:text-black\"\n                  >\n                    <div className=\"w-2.2rem h-2.2rem p-2\">\n                      <SVG\n                        name=\"plus\"\n                        viewBox=\"0 0 32 32\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"12px\"\n                        height=\"12px\"\n                        stroke=\"currentcolor\"\n                        strokeWidth=\"5.33333\"\n                      />\n                    </div>\n                  </button>\n                )}\n              </div>\n            </li>\n          </ul>\n        </div>\n        <div className=\"text-1.4rem px-2.4rem\">\n          <div className=\"mb-1\">숙박에 필요한 인원을 선택해 주세요.</div>\n          <div>어린이, 유아는 1명 이상의 성인을 동반해야 합니다.</div>\n        </div>\n        <div className=\"my-1.6rem border-b\"></div>\n        <div className=\"flex justify-between items-center px-2.4rem pb-1.6rem\">\n          <button\n            data-name=\"close\"\n            onClick={hideModal}\n            className=\"text-1.6rem font-semibold underline\"\n          >\n            취소\n          </button>\n          <button\n            onClick={modifyGuest}\n            className=\"text-1.6rem text-#fff font-semibold py-1.4rem px-2.4rem bg-black rounded-xl\"\n          >\n            저장하기\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BookingGuestEditModal;\n","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\booking\\BookingButton.jsx",["540"],"// BookingButton\nimport React from 'react';\nimport SVG from '../../assets/svg';\nimport {\n  modifyReservation,\n  paymentReservation,\n} from '../../redux/lib/api/reservations';\n\nconst BookingButton = ({\n  showModal,\n  reservationId,\n  checkInDate,\n  checkoutDate,\n  query,\n  subPage,\n  accommodationInfo,\n  nights,\n}) => {\n  // 쿼리에서 가져올 정보들\n  const { totalGuestNum, adultNum, childNum, infantNum } = query;\n  // url에서 accommodationId 가져오기\n  const accommodationId = window.location.pathname.split('/')[3];\n\n  const { pricePerDay } = subPage === 'modify' && query;\n  const { price } = subPage === 'payment' && accommodationInfo;\n\n  // 서비스 수수료 계산\n  const fees = Math.round(\n    subPage === 'modify' ? pricePerDay * nights * 0.07 : price * nights * 0.07,\n  );\n\n  // 총 가격 계산\n  const totalPrice =\n    subPage === 'modify'\n      ? pricePerDay * nights + 10000 + fees\n      : price * nights + 10000 + fees;\n\n  // 수정 완료 버튼 클릭 시 patch 요청 및 확인 모달창 show\n  const patchReservation = async type => {\n    // 예약 수정 patch 요청\n    const res = await modifyReservation({\n      reservationId,\n      checkInDate,\n      checkoutDate,\n      totalGuestNum,\n      adultNum,\n      childNum,\n      infantNum,\n      totalPrice,\n    });\n\n    // 확인 버튼 모달 open\n    showModal(type);\n  };\n\n  // 결제 완료 버튼 클릭 시 post 요청 및 확인 모달창 show\n  const postReservation = async type => {\n    // 예약 하기 post 요청\n    const res = await paymentReservation({\n      // memberId,\n      accommodationId,\n      checkInDate,\n      checkoutDate,\n      totalGuestNum: +adultNum + +childNum + +infantNum,\n      adultNum,\n      infantNum,\n      childNum,\n      totalPrice,\n    });\n\n    console.log(res);\n\n    // 확인 버튼 모달 open\n    showModal(type);\n  };\n\n  return (\n    <div className=\"mt-10 flex\">\n      <button\n        onClick={\n          subPage === 'modify'\n            ? () => patchReservation('edit')\n            : () => postReservation('edit')\n        }\n        className=\"flex items-center justify-center w-60 h-20 mr-10 bg-#D70466 text-white font-bold rounded-2xl relative\"\n      >\n        <SVG\n          name=\"lock\"\n          width=\"16px\"\n          height=\"16px\"\n          viewBox=\"0 0 24 24\"\n          color=\"#fff\"\n        />\n        <span className=\"m-2 text-2xl\">\n          {subPage === 'modify' ? '수정 완료' : '결제 완료'}\n        </span>\n      </button>\n      {subPage === 'modify' && (\n        <button\n          onClick={() => showModal('delete')}\n          className=\"flex items-center justify-center w-60 h-20 bg-gray-400 text-black font-bold rounded-2xl\"\n        >\n          <span className=\"m-2 text-2xl\">예약 취소</span>\n        </button>\n      )}\n    </div>\n  );\n};\nexport default BookingButton;\n","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\common\\Button.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\Introduction.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\Photos.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\CalendarDetail.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\Icons.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\Title.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\Description.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\ThingsToKnow.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\Beds.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\Map.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\Host.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\Reviews.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\Payment.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\common\\Carousel.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\booking\\BookingPaymentInfo.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\trip\\TripReservation.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\booking\\BookingRoomInfo.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\common\\Calendar.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\trip\\TripCard.jsx",["541","542"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Modal from '../common/Modal';\nimport TripReviewPostModal from './TripReviewPostModal';\nimport TripReviewGetModal from './TripReviewGetModal';\nimport {\n  readReview,\n  postReview,\n  deleteReview,\n} from '../../redux/lib/api/review';\nconst TripCard = ({ reservations, tab, reviewStatus, setReviewStatus }) => {\n  // 예약 숙소 정보\n  const {\n    memberId,\n    accommodationId,\n    reservationId,\n    checkInDate,\n    checkoutDate,\n    hostName,\n    isWrittenReview,\n    city,\n    gu,\n    title,\n    accommodationPicture,\n    totalGuestNum,\n    adultNum,\n    childNum,\n    infantNum,\n    totalPrice,\n    pricePerDay,\n  } = reservations;\n\n  // 작성된 리뷰 GET 한 상태\n  const [review, setReview] = useState({\n    ratings: null,\n    content: '',\n  });\n\n  // 리뷰 작성 모달창 상태\n  const [visible, setVisible] = useState(false);\n\n  // 리뷰 보기 모달창 상태\n  const [revVisible, setRevVisible] = useState(false);\n\n  // 별점 상태\n  const [ratings, setRatings] = useState([true, true, true, true, false]);\n\n  // 리뷰 작성 모달 열기\n  const showModal = () => {\n    setVisible(true);\n    setRatings([true, true, true, true, false]);\n  };\n\n  // 리뷰 보기 모달 열기\n  const showRevModal = async reservationId => {\n    setRevVisible(true);\n    const response = await readReview(reservationId);\n    const reviewData = await response.data;\n    console.log(reviewData);\n    setReview({\n      ...review,\n      ratings: reviewData.rating,\n      content: reviewData.content,\n    });\n  };\n\n  // 리뷰 삭제용\n  const removeReview = () => {\n    deleteReview();\n  };\n\n  // 리뷰 작성 모달 숨기기\n  const hideModal = ({ target }) => {\n    if (target.dataset.name) {\n      setVisible(false);\n    }\n  };\n\n  // 리뷰 보기 모달 숨기기\n  const hideRevModal = ({ target }) => {\n    if (target.dataset.name) {\n      setRevVisible(false);\n    }\n  };\n\n  // 별점 변경\n  const changeRating = id => {\n    let newRatings = [...ratings];\n    for (let i = 0; i < 5; i++) {\n      i <= id ? (newRatings[i] = true) : (newRatings[i] = false);\n    }\n    setRatings(newRatings);\n  };\n\n  // 리뷰 쓰기 요청 POST\n  const postingReview = async ({\n    e,\n    memberId,\n    accommodationId,\n    reservationId,\n    rating,\n    content,\n  }) => {\n    await postReview({\n      memberId,\n      accommodationId,\n      reservationId,\n      rating,\n      content,\n    });\n    if (e.target.dataset.name) {\n      setVisible(false);\n    }\n    setReviewStatus(!reviewStatus);\n  };\n  return (\n    <>\n      {visible && (\n        <Modal>\n          <TripReviewPostModal\n            accommodationId={accommodationId}\n            hideModal={hideModal}\n            ratings={ratings}\n            changeRating={changeRating}\n            reservationId={reservationId}\n            postingReview={postingReview}\n            hostName={hostName}\n          />\n        </Modal>\n      )}\n      {revVisible && (\n        <Modal>\n          <TripReviewGetModal\n            review={review}\n            hideRevModal={hideRevModal}\n            hostName={hostName}\n          />\n        </Modal>\n      )}\n      <li className=\"px-6 w-1/3\">\n        <div className=\"mt-6 mb-8 rounded-2xl shadow-before hover:transition-shadow hover:shadow-after\">\n          <Link to={`/accommodation/${accommodationId}`}>\n            <div>\n              <img\n                src={accommodationPicture.url}\n                alt=\"#\"\n                className=\"h-72 w-full rounded-t-2xl object-cover\"\n              />\n            </div>\n          </Link>\n          <div className=\"flex flex-col flex-grow mt-10\">\n            <div className=\"text-1.2rem text-#717171 px-10\">\n              {`${checkInDate} - ${checkoutDate}`}\n            </div>\n            <p className=\"text-2.2rem font-semibold my-2 px-10 truncate\">\n              {gu && `${gu}`} {city && `, ${city}`}\n            </p>\n            <div className=\"mt-2 flex flex-col flex-1\">\n              <div className=\"flex flex-row items-center h-24 px-10\">\n                <img\n                  src={accommodationPicture.url}\n                  alt=\"#\"\n                  className=\"h-16 w-16 rounded-xl mr-6\"\n                />\n                <p className=\"text-1.4rem truncate flex-1\">{title}</p>\n              </div>\n              {tab === 'past' && isWrittenReview ? (\n                <div\n                  // 리뷰 삭제용\n                  // onClick={removeReview}\n                  onClick={() => showRevModal(reservationId)}\n                  className=\"text-1.4rem h-24 flex flex-row items-center rounded-b-2xl justify-center border-t border-gray-300 font-semibold cursor-pointer hover:transition-all hover:bg-#f7f7f7\"\n                >\n                  내 리뷰 보기\n                </div>\n              ) : tab === 'past' && !isWrittenReview ? (\n                <div\n                  onClick={showModal}\n                  className=\"text-1.4rem h-24 flex flex-row items-center rounded-b-2xl justify-center border-t border-gray-300 font-semibold cursor-pointer hover:transition-all hover:bg-#f7f7f7\"\n                >\n                  리뷰 쓰기\n                </div>\n              ) : (\n                <Link\n                  to={`/booking/modify?reservationId=${reservationId}&checkInDate=${checkInDate}&checkoutDate=${checkoutDate}&totalGuestNum=${totalGuestNum}&adultNum=${adultNum}&childNum=${childNum}&infantNum=${infantNum}&totalPrice=${totalPrice}&pricePerDay=${pricePerDay}`}\n                >\n                  <div className=\"text-1.4rem h-24 flex flex-row items-center rounded-b-2xl justify-center border-t border-gray-300 font-semibold cursor-pointer hover:transition-all hover:bg-#f7f7f7\">\n                    예약 변경 또는 취소\n                  </div>\n                </Link>\n              )}\n            </div>\n          </div>\n        </div>\n      </li>\n    </>\n  );\n};\nexport default TripCard;\n","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\assets\\svg.js",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\ReviewProfile.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\trip\\TripReviewRating.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\assets\\Svg.js",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\RoomDetailHeader.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\redux\\modules\\roomDetail.js",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\redux\\lib\\api\\roomDetail.js",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\common\\MultipleCarousel.jsx",["543","544","545","546","547","548"],"import React from \"react\";\nimport { AiFillStar } from 'react-icons/ai';\nimport { HiChevronLeft, HiChevronRight } from 'react-icons/hi';\nimport Slider from \"react-slick\";\nimport RecentSearch from '../search/RecentSearch';\nimport Carousel from './Carousel';\nimport styled from 'styled-components';\nconst StyledSlider = styled(Slider)`\n    width: ${({size}) => size === 'Large' ? '300px' : size === 'Medium' ? '275px' : '145px'};\n    height: ${({size}) => size === 'Large' ? '200px' : size === 'Medium' ? '185px' : '95px'}; \n  \n    border-radius: 10px;\n\n  .slick-slider {\n    position: relative;\n  }\n\n  .arrowLeft {\n  }\n\n  .slick-dots {\n    position: absolute;\n    bottom: 5px;\n    margin: 0;\n    padding: 0;\n    display: ${({size}) => size === 'Small' ? 'none' : 'block'}\n  }\n\n  .slick-dots > li {\n    width: 1px;\n  }\n\n\n  img {\n    width: 100%;\n    height: ${({size}) => size === 'Large' ? '200px' : size === 'Medium' ? '185px' : '95px'}; \n  }\n\n`;\n\nconst ArrowLeft = ({ currentSlide, slideCount, onClick }) => {\n  return (\n    <button\n      onClick={onClick}\n      className=\"flex items-center justify-center w-16 h-16 mr-4 text-black text-4xl border-2 border-gray-300 transition-colors duration-150 focus:outline-none bg-white  rounded-full focus:shadow-outline hover:bg-gray-100 transform hover:scale-110 absolute -top-20 right-20\"\n      aria-hidden=\"true\"\n      aria-disabled={currentSlide === slideCount + 1 ? true : false}\n      type=\"button\"\n      // style={{ width: 100, heigth: 100, position: 'absolute', zIndex: 20, bottom: 50, left: -25, border: '10px solid' }}\n    >\n      <HiChevronLeft />\n    </button>\n  )\n};\n \nconst ArrowRight = ({ currentSlide, slideCount, onClick }) => (\n    <button\n      onClick={onClick}\n      className=\"flex items-center justify-center w-16 h-16 mr-4 text-black text-4xl border-2 border-gray-300 transition-colors duration-150 focus:outline-none bg-white  rounded-full focus:shadow-outline hover:bg-gray-100 transform hover:scale-110 absolute -top-20 right-0\"\n      aria-hidden=\"true\"\n      aria-disabled={currentSlide === slideCount - 1 ? true : false}\n      type=\"button\"\n    >\n      <HiChevronRight />\n    </button>\n \n  );\n\n\n\nconst MultipleCarousel = ({children}) => {\n  // const recent = children[0];\n  const settings = {\n    dots: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 5,\n    slidesToScroll: 5,\n    prevArrow : <ArrowLeft />,\n    nextArrow : <ArrowRight />,\n  };\n\n  return (\n    <li className=\"w-full\">\n      <Slider {...settings} >\n          {children && children.map(recent => (\n            <div>\n              <h3>\n                <RecentSearch {...recent} />\n                </h3>\n            </div>\n          ))}\n        \n    \n        \n        <div >\n          <h3>\n            \n            </h3>\n          </div>\n          <div>\n            <h3></h3>\n          </div>\n          <div>\n            <h3></h3>\n          </div>\n          <div>\n            <h3></h3>\n          </div>\n          {/* <div>\n            <h3></h3>\n          </div> */}\n      </Slider>\n    </li>\n  );\n  \n}\n\nexport default MultipleCarousel;\n\n\n\n","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\redux\\lib\\api\\review.js",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\trip\\TripReviewGetModal.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\trip\\TripReviewPostModal.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\RoomDetailSafetyModal.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\redux\\modules\\auth.js",["549","550"],"import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\nimport * as authAPI from '../lib/api/auth';\nimport { takeLatest } from 'redux-saga/effects';\n\n// Action type\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM';\n// social register\nconst SOCIAL = 'auth/SOCIAL';\n\n// const REGISTER = 'auth/REGISTER';\n// const REGISTER_SUCCESS = 'auth/REGISTER_SUCCESS';\n// const REGISTER_FAILURE = 'auth/REGISTER_FAILURE';\n\n// const LOGIN = 'auth/LOGIN';\n// const LOGIN_SUCCESS = 'auth/LOGIN_SUCCESS';\n// const LOGIN_FAILURE = 'auth/LOGIN_FAILURE';\n\n// 위의 반복되는 코드를 아래처럼 작성\n\nconst [\n  SOCIAL_REGISTER,\n  SOCIAL_REGISTER_SUCCESS,\n  SOCIAL_REGISTER_FAILURE,\n] = createRequestActionTypes('auth/SOCIAL_REGISTER');\nconst [REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE] = createRequestActionTypes(\n  'auth/REGISTER',\n);\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] = createRequestActionTypes(\n  'auth/LOGIN',\n);\n\n// 유저 정보 받아오기\nconst [\n  READ_MEMBERINFO,\n  READ_MEMBERINFO_SUCCESS,\n  READ_MEMBERINFO_FAILURE,\n] = createRequestActionTypes('auth/READ_MEMBERINFO');\n\n// 유저 정보 수정\nconst [\n  MODIFY_MEMBERINFO,\n  MODIFY_MEMBERINFO_SUCCESS,\n  MODIFY_MEMBERINFO_FAILURE,\n] = createRequestActionTypes('auth/MODIFY_MEMBERINFO');\n\nconst START_LOADING = 'loading/START_LOADING';\nconst FINISH_LOADING = 'loading/FINISH_LOADING';\n\n// Create action\n// export const changeField = createAction(\n// CHANGE_FIELD,\n// ({ form, key, value }) => ({\n//   form, // register, socialRegister, login(로그인도 같이 할 수 있을까요)\n//   key, // username, password, passwordConfirm, email, contact, birthDate\n//   value, // 실제 바꾸려는 값\n// }),\n// ({ form, key, value }) => ({\n//  }),\n// );\n\n// social\nexport const socialRegister = createAction(SOCIAL);\n// export const social = createAction()\n\n// 유저정보 가져오기\nexport const readMemberInfo = createAction(READ_MEMBERINFO);\n\n// 유저정보 수정하기\nexport const modifyMemberInfo = createAction(MODIFY_MEMBERINFO);\n\nexport const changeField = createAction(CHANGE_FIELD);\n\nexport const initializeForm = createAction(INITIALIZE_FORM, form => form);\n// initializeForm의 결과 { type: INITIALIZE_FORM, payload: form}\n// 함수가 어떤 파라미터를 필요로 하는지 파악 할 수 있다( 선택 사항 )\nexport const socialRegisterSubmitAction = createAction(\n  SOCIAL_REGISTER,\n  ({ email, name, contact, birthDate, socialId }) => ({\n    email,\n    name,\n    contact,\n    birthDate,\n    socialId,\n  }),\n);\nexport const authRegister = createAction(\n  REGISTER,\n  ({ name, email, contact, birthDate, password, passwordConfirm }) => ({\n    name,\n    email,\n    contact,\n    birthDate,\n    password,\n    passwordConfirm,\n  }),\n);\n\nexport const authLogin = createAction(LOGIN, ({ email, password }) => ({\n  email,\n  password,\n}));\n\nexport const startLoading = createAction(\n  START_LOADING,\n  requestType => requestType,\n);\n\nexport const finishLoading = createAction(\n  FINISH_LOADING,\n  requestType => requestType,\n);\n\n// Initialize form\nconst initialState = {\n  register: {\n    name: '',\n    email: '',\n    contact: '',\n    birthDate: '',\n    password: '',\n    passwordConfirm: '',\n  },\n  socialRegister: {\n    name: '',\n    email: '',\n    contact: '',\n    birthDate: '',\n    socialId: '',\n  },\n  login: {\n    email: '',\n    password: '',\n  },\n  userInfo: {\n    email: '',\n    name: '',\n    birthDate: '',\n    contact: '',\n  },\n  auth: null,\n  authError: '',\n};\n\n// 1. saga 생성\n// REGISTER가 발생하면 authAPI.register 함수(비동기)를 실행하겠다. 즉, 곧 registerSaga함수가 제너레이트 함수가 된다.\nconst registerSaga = createRequestSaga(REGISTER, authAPI.register);\n// const loginSaga = createRequestSaga(LOGIN, authAPI.login);\nconst loginSaga = createRequestSaga(LOGIN, authAPI.getToken);\nconst socialRegisterSaga = createRequestSaga(\n  SOCIAL_REGISTER,\n  authAPI.socialRegister,\n);\n// 유저 정보 가져오기\nconst readMemberInfoSaga = createRequestSaga(READ_MEMBERINFO, authAPI.getUser);\n\n// 유저 정보 수정하기\nconst modifyMemberInfoSaga = createRequestSaga(\n  MODIFY_MEMBERINFO,\n  authAPI.modifyUser,\n);\n\nexport function* authSaga() {\n  // 사가 로직\n  // takeLates - 코드를 진행하는 중간에 타입에 맞는 디스패치가 추가로 들어와도 가장 마지막에 들어온 것만 실행한다.\n  // takeLates가 첫번째 파라미터로 들어온 함수가 발생했는지 감시한다.\n  // 만약 발생을 했다면 registerSaga generator 함수를 실행\n  yield takeLatest(REGISTER, registerSaga);\n  yield takeLatest(LOGIN, loginSaga);\n  yield takeLatest(SOCIAL_REGISTER, socialRegisterSaga);\n  yield takeLatest(READ_MEMBERINFO, readMemberInfoSaga);\n  yield takeLatest(MODIFY_MEMBERINFO, modifyMemberInfoSaga);\n}\n// 2. 만든 사가 함수를 모듈의 인덱스 파일에서 합쳐주기.\nconst auth = handleActions(\n  {\n    [CHANGE_FIELD]: (state, { payload: { form, key, value } }) => {\n      return {\n        ...state,\n        [form]: {\n          ...state[form],\n          [key]: value,\n        },\n      };\n    },\n    [INITIALIZE_FORM]: (state, { payload: form }) => ({\n      ...state,\n      [form]: initialState[form],\n      authError: '', // 폼 전환 시 회원 인증 에러 초기화\n    }),\n    [REGISTER_SUCCESS]: (state, { payload: auth }) => ({\n      ...state,\n      authError: null,\n      auth,\n    }),\n    [REGISTER_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      authError: error,\n    }),\n    [LOGIN_SUCCESS]: (state, { payload: auth }) => ({\n      ...state,\n      authError: null,\n      auth,\n    }),\n    [LOGIN_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      authError: error,\n    }),\n    [START_LOADING]: (state, action) => ({\n      ...state,\n      [action.payload]: true,\n    }),\n    [FINISH_LOADING]: (state, action) => ({\n      ...state,\n      [action.payload]: false,\n    }),\n    [SOCIAL]: (state, action) => {\n      return {\n        ...state,\n        socialRegister: {\n          ...state.socialRegister,\n          email: action.payload.email,\n          name: action.payload.name,\n          socialId: action.payload.socialId,\n        },\n      };\n    },\n\n    [SOCIAL_REGISTER_SUCCESS]: (state, { payload: auth }) => ({\n      ...state,\n      authError: null,\n      auth,\n    }),\n    [SOCIAL_REGISTER_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      authError: error,\n    }),\n    [READ_MEMBERINFO_SUCCESS]: (state, { payload: userInfo }) => ({\n      ...state,\n      userInfo: userInfo,\n    }),\n    [READ_MEMBERINFO_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      authError: error,\n    }),\n    [MODIFY_MEMBERINFO]: (state, action) => ({\n      ...state,\n      userInfo: {\n        ...state.userInfo,\n        name: action.payload.name,\n        birthDate: action.payload.birthDate,\n        contact: action.payload.contact,\n      },\n    }),\n  },\n  initialState,\n);\n\nexport default auth;\n","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\RoomDetailGuestEditPopup.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\RoomDetailReviewModal.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\containers\\CommonHeaderContainer.js",["551"],"import React, { useEffect, useState } from 'react';\nimport CommonHeader from '../components/common/CommonHeader';\nimport { throttle } from 'lodash';\nimport {\n  changeField,\n  initializeForm,\n  authRegister,\n  socialRegisterSubmitAction,\n} from '../redux/modules/auth';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getToken, logout } from '../redux/lib/api/auth';\n\nconst CommonHeaderContainer = ({\n  location,\n  calendar,\n  personnel,\n  setLocation,\n  setCalendar,\n  setPersonnel,\n  searchStartState,\n  setSearchStartState,\n  address,\n  setAddress,\n}) => {\n  const [flexibleScroll, setFlexibleScroll] = useState({\n    currentScroll: 0,\n    scrollPlus: 0,\n    scrollMinus: 0,\n    scrollStatus: false,\n  });\n\n  // 로컬스토리지 토큰 유무\n  const [checkedToken, setCheckedToken] = useState(false);\n  // 스크롤 위치\n  const [scrollY, setScrollY] = useState(false);\n  const [socialModal, setSocialModal] = useState(false);\n  // 유저 메뉴 모달 초기 상태\n  const [visible, setVisible] = useState(false);\n  const [checkedLogin, setCheckedLogin] = useState(false);\n\n  // // 검색 시작 하기 눌렀을 시 모달 초기 상태\n  // 유저 메뉴 -> 로그인, 회원가입 모달 초기상태,\n  // 하나의 모달 회원가입 폼 모달 띄우는것 때문에 생각정리안된게있어서 일단 객체 상태로 냅둠!\n  const [authVisible, setAuthVisible] = useState({\n    // 'login' or 'register'\n    type: null,\n  });\n  // 유저 메뉴 모달 open\n  const showModal = () => {\n    setVisible(true);\n  };\n  // 유저 메뉴 -> 로그인 or 회원가입 눌렀을 시 authVisible의 타입에 따라 모달 Open\n  // userMenu -> menuList 컴포넌트에서 auth를 인자로 받아서 type이 로그인인지 회원가입인지 구분\n  const showAuthModal = auth => {\n    if (auth === 'login') {\n      // 로그인 or 회원가입 누를 시 유저메뉴 close\n      setVisible(false);\n      // type에 들어온 조건 별로 모달 Open\n      setAuthVisible({\n        ...authVisible,\n        type: 'login',\n      });\n      // open시 login form 초기화\n      dispatch(initializeForm('login'));\n    } else if (auth === 'register') {\n      setVisible(false);\n      setAuthVisible({\n        ...authVisible,\n        type: 'register',\n      });\n    }\n  };\n\n  // 회원가입 모달에서 아이디가 있으세요? -> 로그인 버튼\n  // 온클릭 이벤트 만들어서 type:'login'\n  // 로그인 모달에서 아이디가 없으세요? -> 회원가입 버튼\n  // type: 'register'\n  const changeModal = auth => {\n    if (auth === 'register') {\n      setAuthVisible({\n        ...authVisible,\n        type: 'login',\n      });\n      showAuthModal(auth);\n    } else if (auth === 'login') {\n      setAuthVisible({\n        ...authVisible,\n        type: 'register',\n      });\n      showAuthModal(auth);\n    } else if (auth === 'form') {\n      setAuthVisible({\n        ...authVisible,\n        type: 'form',\n      });\n      // open 시 회원가입 폼 초기화\n      dispatch(initializeForm('register'));\n    }\n  };\n\n  // 모달 close\n  const hideModal = ({ target }) => {\n    if (target.dataset.name) {\n      setVisible(false);\n      setAuthVisible(false);\n      // setPersonnel(false);\n      setSocialModal(false);\n    }\n  };\n\n  // 검색 시작하기 onClick시 헤더 스타일 변경\n  const showSearchHeader = ({ target }) => {\n    if (target.dataset.name === 'open') {\n      // 상태 true로 바뀌면서 스타일 변경\n      setSearchStartState(true);\n      // 위치 open\n      setLocation(true);\n      setFlexibleScroll({\n        ...flexibleScroll,\n        currentScroll: window.scrollY,\n        scrollPlus: window.scrollY + 150,\n        scrollMinus: window.scrollY > 150 ? window.scrollY - 150 : 1,\n      })\n    }\n  };\n  // 헤더 위치 (어디로 여행가세요?)\n  const showLocation = ({ target }) => {\n    if (target.dataset.name === 'location') {\n      setLocation(true);\n      setCalendar(false);\n      setPersonnel(false);\n    }\n  };\n  // 헤더 켈린더 ( 체크인, 체크아웃 )\n  const showCalendar = ({ target }) => {\n    if (target.dataset.name === 'calendar') {\n      setCalendar(true);\n      setLocation(false);\n      setPersonnel(false);\n    }\n  };\n  // 헤더 인원 수\n  const showPersonnel = ({ target }) => {\n    if (target.dataset.name === 'personnel') {\n      setPersonnel(true);\n      setLocation(false);\n      setCalendar(false);\n    }\n  };\n  // 헤더에 검색 버튼 누를 시 location: true 하면서 검색 버튼 스타일 변경\n  const searchOnclick = ({ target }) => {\n    if (target.dataset.name === 'search') {\n      setLocation(true);\n    }\n  };\n  //  로그인, 회원가입\n  const dispatch = useDispatch();\n  const state = useSelector(state => state.auth);\n  const { register, login, socialRegister, authError } = state;\n  // 인풋 변경 이벤트 핸들러\n  // 디스트럭처링으로 받기위해서 onChange에서 이벤트 객체와 form을 인자로 넘겨준다\n  // 현재 onChange의 form이 누구인지 구분하기 위해서\n  const onChange = ({ e, form }) => {\n    const { value, name } = e.target;\n    dispatch(\n      changeField({\n        form,\n        key: name,\n        value,\n      }),\n    );\n  };\n  // 폼 등록 이벤트 핸들러\n  const registerSubmit = e => {\n    e.preventDefault();\n    const {\n      name,\n      email,\n      contact,\n      birthDate,\n      password,\n      passwordConfirm,\n    } = register;\n    dispatch(\n      authRegister({\n        name,\n        email,\n        contact,\n        birthDate,\n        password,\n        passwordConfirm,\n      }),\n    );\n  };\n\n  const socialRegisterSubmit = e => {\n    e.preventDefault();\n    const { email, name, contact, birthDate, socialId } = socialRegister;\n    dispatch(\n      socialRegisterSubmitAction({ email, name, contact, birthDate, socialId }),\n    );\n  };\n\n  const loginSubmit = async e => {\n    e.preventDefault();\n    const { email, password } = login;\n    try {\n      const res = await getToken({ email, password });\n      const token = await res.data.token;\n\n      if (token) {\n        localStorage.setItem('token', token);\n        setCheckedToken(true);\n        setAuthVisible(false);\n        setCheckedLogin(false);\n      }\n    } catch (e) {\n      setCheckedLogin(true);\n    }\n  };\n  const userLogout = e => {\n    logout();\n    localStorage.removeItem('token');\n    setCheckedToken(false);\n  };\n\n\n  useEffect(() => {\n    // 로그인이나 회원가입 성공 시 모달창 Close\n    // useEffect에서 하는 이유는 dispatch가 비동기라서 에러객체가 담기는 시점을 알 수 없기 때문에\n    if (authError === null) {\n      setAuthVisible(false);\n    }\n    // 구글로 회원가입 시 서버에서 받아온 유저정보에 socialId가 있다면 회원가입 모달창 open\n    if (socialRegister.socialId) {\n      setSocialModal(true);\n    }\n    // 토큰이 없디면 유저메뉴 view 변경(비 로그인 시)\n    if (localStorage.getItem('token') === null) {\n      setVisible(false);\n      setCheckedToken(false);\n    }\n    // 토큰이 있다면 유저메뉴 view 변경(로그인 시)\n    if (localStorage.getItem('token') !== null) {\n      setVisible(false);\n      setCheckedToken(true);\n    }\n    function watchScroll() {\n      window.scrollY > 20 ? setScrollY(true) : setScrollY(false);\n    }\n    function wathchFlexibleScroll() {\n      // console.log('scrollPlus', flexibleScroll.scrollPlus);\n      if (flexibleScroll.scrollPlus < window.scrollY || window.scrollY < flexibleScroll.scrollMinus) {\n        setSearchStartState(false);\n        setLocation(false);\n        setCalendar(false);\n        setPersonnel(false);\n        setFlexibleScroll({\n          ...flexibleScroll,\n          currentScroll: 0,\n          scrollPlus: 0,\n          scrollMinus: 0,\n        });\n      }\n    }\n    wathchFlexibleScroll();\n    window.addEventListener('scroll', throttle(watchScroll, 150));\n    window.addEventListener('scroll', wathchFlexibleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', watchScroll);\n    };\n  }, [authError, socialRegister.socialId, checkedToken, setSearchStartState]);\n\n  return (\n    <>\n      <CommonHeader\n        showModal={showModal}\n        hideModal={hideModal}\n        changeModal={changeModal}\n        authVisible={authVisible}\n        visible={visible}\n        showAuthModal={showAuthModal}\n        searchStartState={searchStartState}\n        location={location}\n        calendar={calendar}\n        personnel={personnel}\n        scrollY={scrollY}\n        setScrollY={setScrollY}\n        scrollStatus={flexibleScroll.srollStatus}\n        setLocation={setLocation}\n        socialModal={socialModal}\n        onChange={onChange}\n        registerSubmit={registerSubmit}\n        loginSubmit={loginSubmit}\n        socialRegisterSubmit={socialRegisterSubmit}\n        userLogout={userLogout}\n        state={state}\n        checkedToken={checkedToken}\n        showSearchHeader={showSearchHeader}\n        showLocation={showLocation}\n        showCalendar={showCalendar}\n        showPersonnel={showPersonnel}\n        searchOnclick={searchOnclick}\n        address={address}\n        setAddress={setAddress}\n        checkedLogin={checkedLogin}\n      />  \n    </>\n  );\n};\n\nexport default CommonHeaderContainer;\n","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\redux\\lib\\api\\auth.js",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\common\\CommonHeader.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\pages\\roomDetailPage.js",[],["552","553"],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\pages\\TripListPage.js",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\search\\SearchTemplate.jsx",["554","555"],"import React, { useState, useRef, useEffect } from 'react';\nimport AccommTypeMenu from './AccommTypeMenu';\nimport styled from 'styled-components';\nimport AccommList from './AccommList';\nimport Pagination from './Pagination';\nimport ChargeMenu from './ChargeMenu';\nimport MultipleCarousel from '../common/MultipleCarousel';\nimport SearchMap from './SearchMap';\nimport { useLocation } from 'react-router-dom';\nimport AccommodationHeaderContainer from '../../containers/AccommodationContainer';\n\nconst StyledButton = styled.button`\n    cursor: pointer;\n    text-align: center;\n    border: 1px solid #B0B0B0;\n    background-color: #FFFFFF;\n    outline: none !important;\n    padding: 0px;\n    margin: 0px;\n    border-radius: 30px;\n    color: #222222;\n    font-family: Circular,-apple-system,BlinkMacSystemFont,Roboto,Helvetica Neue,sans-serif;\n    padding-top: 8px;\n    padding-bottom: 8px;\n    padding-left: 16px;\n    padding-right: 16px;\n    font-size: 14px;\n    line-height: 16px;\n    &:hover {\n      border: 1px solid #222222;\n    }\n`;\nconst ButtonWrapper = styled.div`\n    box-sizing: border-box;\n    display: inline-block;\n    white-space: nowrap;\n    padding-right: 8px;\n    padding-top: 4px;\n    padding-bottom: 4px;\n    margin-bottom: 10px;\n`;\nconst MapWrapper = styled.div`\n  width: calc(100vw - 86.4rem);\n`;\nconst SearchTemplate = ({ accommodations, loading }) => {\n  const location = useLocation();\n  const [id, setId] = useState(0);\n\n  const [filter, setFilter] = useState({\n    accommType: false,\n    chargeMenu: false,\n  });\n\n  const [isHovering, setIsHovering] = useState({\n    id: null,\n    isHovering: false,\n  });\n\n  const onMouseEnter = (id) => () => {\n    setIsHovering({\n      id,\n      isHovering: true,\n    })\n  };\n\n  const onMouseLeave = (id) => () => {\n    setIsHovering({\n      id,\n      isHovering: false,\n    })\n  };\n\n  const clickFilter = ({ target }) => {\n    if (target.name === 'accommType') setFilter(state => ({ accommType: !state.accommType, chargeMenu: false }));\n    if (target.name === 'chargeMenu') setFilter(state => ({ chargeMenu: !state.chargeMenu, accommType: false }));\n  };\n\n  const getRecentSearch = localStorage.getItem('recentSearch') && JSON.parse(localStorage.getItem('recentSearch')).map(JSON.parse);\n\n  const url = new URL(window.location.href);\n\n  return (\n    <div className=\"w-full flex flex-row flex-nowrap pt-32 absolute z-20\">\n       <AccommodationHeaderContainer />\n      <div className=\"w-86.4rem border pr-8 pl-8 pt-32\">\n        <span className=\"text-1.4rem pb-4\">300개 이상의 숙소</span>\n        <h1 className=\"text-5xl mb-12 font-bold\">\n          {\n            location.pathname === '/accommodations/mapSearch'\n              ? '지도에서 선택한 지역의 숙소'\n              : `${url.searchParams.get('searchKeyword') || '서울'}의 숙소`\n          }\n        </h1>\n        <div className=\"mt-12 mb-12 relative\">\n          <ButtonWrapper>\n            <StyledButton\n              onClick={clickFilter}\n              name=\"accommType\"\n              style={{ border: `${filter.accommType ? '2px solid #222222' : '1px solid #B0B0B0'}` }}\n              filter={filter}\n            >\n              숙소 유형\n            </StyledButton>\n          </ButtonWrapper>\n          <ButtonWrapper>\n            <StyledButton\n              onClick={clickFilter}\n              name=\"chargeMenu\"\n              style={{ border: `${filter.chargeMenu ? '2px solid #222222' : '1px solid #B0B0B0'}` }}\n              filter={filter}>\n              요금\n            </StyledButton>\n          </ButtonWrapper>\n            {filter.accommType && <AccommTypeMenu setFilter={setFilter} />}\n            {filter.chargeMenu && <ChargeMenu setFilter={setFilter} />}\n        </div>\n        <div className=\"text-1.6rem text-#717171 border-b border-searchBorder pb-10\">\n          여행 날짜와 게스트 인원수를 입력하면 1박당 총 요금을 확인할 수 있습니다.\n        </div>\n        <div className=\"text-1.6rem pb-10 pt-10\">\n          예약하기 전에 코로나19 관련 여행 제한 사항을 확인하세요.\n        </div>\n        <ul>\n          {accommodations\n            &&\n           accommodations.map(accommodation => (\n              <AccommList\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n                loading={loading}\n                {...accommodation} />\n            ))}\n        </ul>\n        <div className=\"pt-20 border-t border-#EBEBEB relative\">\n          <h2 className=\"text-2.2rem text-mainFont\">최근 조회</h2>\n          <p className=\"text-1.6rem text-mainFont\">현재 검색 결과와 일치하도록 날짜와 가격이 업데이트되었습니다.</p>\n          <ul className=\"w-full h-18rem flex flex-row flex-wrap mb-4\">\n            <MultipleCarousel>\n              {getRecentSearch}\n            </MultipleCarousel>\n          </ul>\n        </div>\n        <div className=\"pt-40 flex flex-col flex-wrap items-center\">\n          <Pagination />\n          <div className=\"text-1.4rem text-#22222\">숙소 300개 이상 중 1 - 20</div>\n          <div className=\"text-1.2rem text-#717171 py-14\">전체 요금을 보려면 날짜를 입력하세요. 추가 요금이 적용되고 세금이 추가될 수 있습니다.</div>\n        </div>  \n      </div>\n      <MapWrapper className=\"fixed w-full h-full top-0 right-0\" onClick={(e) => {\n        if (!e.target.dataset.name) setId(0);\n      }}>\n        <SearchMap\n          data-name=\"marker\"\n          accommodations={accommodations}\n          loading={loading}\n          isHovering={isHovering}\n          id={id}\n          setId={setId}\n          address={url.searchParams.get('searchKeyword')}\n        />\n      </MapWrapper>\n    </div>\n  );\n};\nexport default React.memo(SearchTemplate);","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\main\\Main.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\modify\\ModifyAccount.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\search\\AccommList.jsx",["556","557"],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Carousel from '../common/Carousel';\nimport { FiHeart } from 'react-icons/fi';\nimport styled from 'styled-components';\nimport { AiFillStar } from 'react-icons/ai';\nimport { deleteBookmark, postBookmark } from '../../redux/lib/api/bookmark';\n\nconst HoverSvg = styled.button`\n  transition: all 0.2s ease-in-out;\n  width: 4rem;\n  height: 4rem;\n  border-radius: 50%;\n  &:hover {\n    transform: scale(1.1);\n    background-color: rgba(229, 231, 235, 1);\n    transition: background-color 0.2s;\n  }\n`;\n\nconst recentSearch = [];\n\nconst AccommList = props => {\n  const {\n    id,\n    accommodationPictures,\n    accommodationType,\n    bathroomNum,\n    bedNum,\n    bedroomNum,\n    buildingType,\n    capacity,\n    gu,\n    price,\n    rating,\n    reviewNum,\n    title,\n    onMouseEnter,\n    onMouseLeave,\n    bookmarked,\n    loading\n  } = props;\n  const cost = price && price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\n  const [bookMark, setBookMark] = useState(bookmarked);\n  \n  const bookMarkClick = id => () => {\n    setBookMark(!bookMark);\n    !bookMark ? postBookmark(id) : deleteBookmark(id);\n  };\n  const img =\n    accommodationPictures && accommodationPictures.map(picture => picture.url);\n  const setLocal = id => () => {\n    recentSearch.unshift({\n      id,\n      title,\n      accommodationPictures: accommodationPictures.map(picture => picture.url),\n      rating,\n      buildingType,\n      accommodationType,\n      reviewNum,\n    });\n    const jsonObject = recentSearch.map(JSON.stringify);\n    const uniqueSet = new Set(jsonObject);\n    localStorage.setItem('recentSearch', JSON.stringify([...uniqueSet]));\n  };\n\n  const url = new URL(window.location.href);\n  \n  const checkIn = url.searchParams.get('checkIn');\n  const checkout = url.searchParams.get('checkout');\n  const adultNum = url.searchParams.get('adultNum');\n  const childNum = url.searchParams.get('childNum');\n  const infantNum = url.searchParams.get('infantNum');\n\n    return (\n      <li\n        key={id}\n        onClick={setLocal(id)}\n        onMouseEnter={onMouseEnter(id)}\n        onMouseLeave={onMouseLeave(id)}\n        data-name=\"accommList\"\n      >\n        <div className=\"h-25rem border-t border-#EBEBEB pt-10 pb-10 relative\">\n          <HoverSvg\n            className=\"absolute top-8 right-0 z-9\"\n            onClick={bookMarkClick(id)}\n          >\n            <FiHeart\n              fill={bookMark ? 'rgb(255, 56, 92)' : '#fff'}\n              size={30}\n              stroke={bookMark ? '' : 'black'}\n              className=\"absolute top-2 left-2\"\n            />\n          </HoverSvg>\n          <Link\n            to={\n              `/accommodation/${id}?${checkIn ? `checkInDate=${checkIn}&` : ''}${checkout ? `checkoutDate=${checkout}` : ''}${adultNum ? `&adultNum=${adultNum}&` : ''}${childNum ? `childNum=${childNum}&` : '' }${infantNum ? `infantNum=${infantNum}` : ''}`\n            }\n            className=\"flex focus:outline-none\"\n          >\n            <Carousel size=\"Large\" img={img} />\n            <div className=\"relative w-54rem truncate ml-5\">\n              <span className=\"text-#717171 text-1.4rem inline-block\">\n                {gu}의 {buildingType} {accommodationType}\n              </span>\n              <div className=\"w-34rem\">\n                <div className=\"text-1.8rem w-34rem truncate\">{title}</div>\n                <div className=\"w-2.4rem border-t mt-4 mb-4\"></div>\n                <div className=\"text-1.4rem text-#717171\">\n                  최대 인원 {capacity}명 · 침실 {bedroomNum}개 · 침대 {bedNum}개 ·\n                  욕실 {bathroomNum}개\n                </div>\n                <div className=\"text-1.4rem text-#717171\">\n                  무료 주차 공간 · 주방 · 난방 · 무선 인터넷\n                </div>\n              </div>\n              {rating !== 0 && (\n                <div className=\"text-1.4rem mt-2 inline-block absolute top-17rem\">\n                  <AiFillStar\n                    size={20}\n                    fill={'#FF385C'}\n                    className=\"inline-block\"\n                  />\n                  <span>\n                    {rating} ({reviewNum})\n                  </span>\n                </div>\n              )}\n              <div className=\"absolute top-17.4rem right-0 text-1.8rem\">\n                <span className=\"font-extrabold\"> ₩{cost} </span>/1박\n              </div>\n            </div>\n          </Link>\n        </div>\n      </li>\n    );\n};\nexport default AccommList;\n","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\search\\Pagination.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\search\\AccommTypeMenu.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\search\\ChargeMenu.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\search\\MapPopup.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\search\\RecentSearch.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\search\\SearchMap.jsx",["558"],"import React, { useEffect, useState } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport SVG from '../../assets/svg';\nimport { useHistory } from 'react-router-dom';\nimport MapPopup from './MapPopup';\nimport Geocode from \"react-geocode\";\n\nconst Marker = ({ isHovering, accommId, id, setId, img, accomm, hoverId, setHoverId }) => {\n  const [coord, setCoord] = useState({ clientX: null, clientY: null });\n\n  const onClick = (e) => {\n    setId(accommId);\n    setCoord({\n      clientX: e.clientX,\n      clientY: e.clientY,\n    })\n  };\n\n  const image = img.map(img => img.url);\n  return (\n    <div\n      onClick={onClick}\n      className=\"relative \"\n      >\n      {accommId === id \n        && <MapPopup accomm={accomm} img={image} coord={coord} accommId={accommId} />}\n      <div\n        data-name=\"marker\"\n        className=\"hover:scale-125 duration-200 transform\"\n          style={{\n        backgroundColor: `${isHovering.id === accommId && isHovering.isHovering ? 'rgb(34, 34, 34)' : 'rgb(255, 255, 255)'}`,\n        boxShadow: 'rgb(0 0 0 / 8%) 0px 0px 0px 1px, rgb(0 0 0 / 18%) 0px 1px 2px',\n        color: `${isHovering.id === accommId && isHovering.isHovering ? 'rgb(34, 34, 34)' : 'rgb(255, 255, 255)'}`,\n        width: 32,\n        height: 32,\n        borderRadius: '50%',\n        justifyContent: 'center',\n        alignItems: 'center',\n        display: 'flex',\n        position: 'relative',\n          }}>\n        <SVG\n          dataName=\"marker\"\n          name=\"house\"\n          width=\"2rem\"\n          height=\"2rem\"\n          viewBox=\"0 0 24 24\"\n          color={`${isHovering.id === accommId && isHovering.isHovering ? 'rgb(255, 255, 255)' : 'rgb(34, 34, 34)'}`}\n        />\n        </div>\n    </div>\n  )\n};\n \nconst SearchMap = ({ accommodations, loading, isHovering, id, setId, address }) => {\n  const [hoverId, setHoverId] = useState(0);\n  const [coord, setCoord] = useState({\n    clientX: null,\n    clientY: null,\n  })\n  \n  const [center, setCenter] = useState({\n    lat: null,\n    lng: null,\n  });\n\n  useEffect(() => { \n    Geocode.setApiKey(\"AIzaSyA6XrrGClq-qmlmWDQCWGsgau4tzbQcINU\");\n    \n      Geocode.fromAddress(address).then(\n        (response) => {\n          const { lat, lng } = response.results[0].geometry.location;\n          setCenter({\n            lat: lat,\n            lng: lng,\n          })\n        },\n        (error) => {\n          console.error(error);\n        }\n      );\n  }, [address]);\n\n  \n  const history = useHistory();\n\n\n  const defaultProps = {\n    center: {\n      lat:  center.lat,\n      lng:  center.lng,\n    },\n    zoom: 14\n  };\n\n  console.log(defaultProps.center.lat);\n \n  let boundaryCoordinate = {};\n \n    return (\n      // Important! Always set the container height explicitly\n      <div style={{ height: '100vh', width: '100%' }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: 'AIzaSyA6XrrGClq-qmlmWDQCWGsgau4tzbQcINU' }}\n          center={defaultProps.center}\n          defaultZoom={defaultProps.zoom}\n          options={{\n            scrollwheel: true\n          }}\n          onDragEnd={() => {\n            history.push(\n              'mapSearch?minLatitude='\n              + boundaryCoordinate.minLatitude +\n              '&maxLatitude='\n              + boundaryCoordinate.maxLatitude +\n              '&minLongitude='\n              + boundaryCoordinate.minLongitude +\n              '&maxLongitude='\n              + boundaryCoordinate.maxLongitude)\n          }}\n          onChange={({ center, zoom, bounds, marginBounds }) => {\n              boundaryCoordinate = {\n                minLatitude: marginBounds.sw.lat,\n                maxLatitude: marginBounds.ne.lat,\n                minLongitude: marginBounds.sw.lng,\n                maxLongitude: marginBounds.ne.lng\n              }\n          }}\n        > \n          {loading === false && accommodations.map(accomm => {\n            return (\n              <Marker\n                lat={accomm.latitude}\n                lng={accomm.longitude}\n                isHovering={isHovering}\n                hoverId={hoverId}\n                setHoverId={setHoverId}\n                accommId={accomm.id}\n                id={id}\n                setId={setId}\n                img={accomm.accommodationPictures}\n                accomm={accomm}\n                coord={coord}\n              />)\n            })}\n        </GoogleMapReact>\n      </div>\n    );\n  \n}\n \nexport default React.memo(SearchMap);","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\main\\MainCity.jsx",["559"],"import { Link } from \"react-router-dom\";\n\nconst img = window.location.origin;\n\nconst MainCity = ({ src, alt, children }) => {\n  return (\n      <figure className=\"flex\">\n        <img\n          className=\"w-24 h-24 mr-6 rounded-lg\"\n          src={img + src}\n          alt={alt}\n        />\n        <figcaption className=\"text-2xl\tfont-semibold\">\n          {children}\n        </figcaption>\n      </figure>\n  );\n};\n\nexport default MainCity;","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\main\\MainRecommendation.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\modify\\ModifyInput.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\modify\\ModifyContent.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\main\\HeaderLogo.jsx",[],["560","561"],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\modify\\ModifyDescription.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\main\\HeaderUser.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\search\\Checkbox.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\search\\RoomCharge.jsx",["562","563"],"import React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\n\nimport RangeSlider from \"./RangeSlider\";\n\nconst prices = [];\nfor (let i = 0; i < 300; i++) {\n  prices.push(Math.floor(Math.random() * 80) + 1);\n}\n\nfunction RoomCharge() {\n  return (\n    <div style={{  width: '400px', height: '180px'}}>\n    <div  >\n      <div style={{ textAlign: \"center\" }}>\n        {/* <Typography variant=\"h5\">A Range Slider with Histogram</Typography>\n        <Typography variant=\"subtitle2\">\n          built using{\" \"}\n          <a href=\"https://github.com/sghall/react-compound-slider\">\n            React Compound Slider\n          </a>\n          ,{\" \"}\n          <a href=\"https://github.com/jerairrest/react-chartjs-2\">\n            react chartjs 2\n          </a>\n          , and <a href=\"https://material-ui.com/\">Material UI</a>\n        </Typography> */}\n      </div>\n        <div>\n        <RangeSlider data={prices} />\n      </div>\n      </div>\n\n\n\n      {/* <Grid container justify=\"center\" >\n      <Grid item xs={12} style={{ textAlign: \"center\" }}>\n      </Grid>\n      <Grid item xs={12} lg={8}>\n        <RangeSlider data={prices} style={{ width: '440px', height: '330px' }} />\n      </Grid>\n      </Grid> */}\n      </div>\n  );\n}\n\nexport default RoomCharge;",["564","565"],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\search\\RangeSlider.jsx",["566","567","568","569"],"import React, { useState } from 'react';\nimport { Grid, Button, TextField, InputAdornment } from '@material-ui/core';\nimport { Slider, Rail, Handles, Tracks, Ticks } from \"react-compound-slider\";\nimport { MuiRail, MuiHandle, MuiTrack, MuiTick } from \"./Components\";\nimport BarChart from './BarChart';\nimport { useSelector } from 'react-redux';\n\nconst RangeSlider = ({data, inputValues, setInputValues}) => {\n  // const sortedData = props.data.slice().sort((a, b) => a - b);\n\n  const range = [data[0], data[data.length - 1]];\n\n\n  const [domain, setDomain] = useState([0, 250000]);\n  const [update, setUpdate] = useState(range);\n  const [values, setValues] = useState(range);\n  // const [inputValues, setInputValues] = useState([0, '250000+']);\n  \n    return (\n      <div className=\"w-36rem h-6.4rem\">\n        <Grid item xs={12}>\n          <div style={{ margin: '10%', height: 120, width: '80%' }}>\n            <BarChart\n              data={data}\n              highlight={update}\n              domain={domain}\n            />\n            <Slider\n              mode={3}\n              step={1}\n              domain={domain}\n              rootStyle={{\n                position: 'relative',\n                width: '100%',\n              }}\n              onUpdate={update => {\n                setUpdate(update);\n                setInputValues(update);\n              }\n              }\n              onChange={values => setValues(values)}\n              values={values}\n            >\n              <Rail>\n                {({ getRailProps }) => <MuiRail getRailProps={getRailProps} />}\n              </Rail>\n              <Handles>\n                {({ handles, getHandleProps }) => (\n                  <div className=\"slider-handles\">\n                    {handles.map(handle => (\n                      <MuiHandle\n                        key={handle.id}\n                        handle={handle}\n                        domain={domain}\n                        getHandleProps={getHandleProps}\n                      />\n                    ))}\n                  </div>\n                )}\n              </Handles>\n              <Tracks left={false} right={false}>\n                {({ tracks, getTrackProps }) => (\n                  <div className=\"slider-tracks\">\n                    {tracks.map(({ id, source, target }) => (\n                      <MuiTrack\n                        key={id}\n                        source={source}\n                        target={target}\n                        getTrackProps={getTrackProps}\n                      />\n                    ))}\n                  </div>\n                )}\n              </Tracks>\n            \n            </Slider>\n            <Grid\n              container\n              alignItems=\"center\"\n              justify=\"space-around\"\n              style={{ marginTop: '20px' }}\n            >\n              <Grid\n                item\n                xs={4}\n                style={{ textAlign: 'right', marginRight: '10px' }}\n              >\n                <TextField\n                  variant=\"outlined\"\n                  label=\"최저 요금\"\n                  value={inputValues[0]}\n                  onChange={evt => {\n                    const value = evt.target.value;\n                    const newState = [value, inputValues[1]];\n                    setInputValues(newState);\n                    if (value && value >= domain[0]) {\n                      setValues(newState);\n                    }\n                  }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment\n                        position=\"start\"\n                        style={{ fontSize: '16'}}\n                      >₩</InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n\n              <Grid item xs={4} style={{ textAlign: 'left' }}>\n                <TextField\n                  variant=\"outlined\"\n                  label=\"최대 요금\"\n                  value={inputValues[1]}\n                  onChange={evt => {\n                    const value = evt.target.value;\n                    const newState = [inputValues[0], value];\n                    setInputValues(newState);\n                    if (value && value <= domain[1] && value >= values[0]) {\n                      setValues(newState);\n                    }\n                  }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">₩</InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              style={{ marginTop: '3%', marginBottom: '3%' }}\n              onClick={() => {\n                setValues(domain);\n                setUpdate(domain);\n                setInputValues(domain);\n              }}\n            ></Button>\n          </div>\n        </Grid>\n      </div>\n    );\n  \n}\n\nexport default React.memo(RangeSlider);\n","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\main\\AuthModal.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\search\\BarChart.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\search\\Components.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\main\\SocialRegisterForm.jsx",[],["570","571"],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\main\\RegisterModal.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\main\\RegisterForm.jsx",["572"],"import React from 'react';\n\nconst RegisterForm = ({ hideModal, onChange, registerSubmit, state }) => {\n  const { register, authError } = state;\n  const emailReg = /([\\w-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\n  const nameReg = /^[가-힇]{2,30}$/;\n  const contactReg = /^\\d{3}\\d{3,4}\\d{4}$/;\n  const passwordReg = /^(?=.*?[a-zA-Z])(?=.*?[0-9])(?=.*[#?!@$%^&*-]).{8,30}$/;\n  // 인풋이 하나라도 비어있는 경우 버튼 disabled\n  const emptyInput =\n    register.email.length === 0 ||\n    register.name.length === 0 ||\n    register.contact.length === 0 ||\n    register.birthDate.length === 0 ||\n    register.password.length === 0 ||\n    register.passwordConfirm.length === 0;\n  // 인풋을 제대로 작성하지 않은 경우 버튼 disabled\n  const invalidValue =\n    !register.email.match(emailReg) ||\n    !register.name.match(nameReg) ||\n    !register.contact.match(contactReg) ||\n    !register.password.match(passwordReg) ||\n    register.password !== register.passwordConfirm;\n\n  // 오늘 날짜 Get (생년월일 오늘 날짜 이전만 선택 가능하게 하기 위해서)\n  const date = new Date();\n  // 년, 월, 일 (월, 일은 한자리 수 일 경우 앞에 + 0,  ex 1995-02-02)\n  const year = date.getUTCFullYear();\n  let month = date.getMonth() + 1;\n  month = month >= 10 ? month : '0' + month;\n  let day = date.getDate();\n  day = day >= 10 ? day : '0' + day;\n  // 오늘 날짜 2021-02-18\n  const curDate = year + '-' + month + '-' + day;\n\n  return (\n    <>\n      <h1 className=\"a11y-hidden\">회원가입 팝업창</h1>\n      <h2 className=\"text-1.6rem font-extrabold border-b pb-8 mb-2rem\">\n        회원가입 완료\n      </h2>\n      <button\n        data-name=\"close\"\n        className=\"flex w-3.6rem h-3.6rem absolute top-5 left-4 justify-center items-center rounded-50% hover:bg-#f7f7f7\"\n        onClick={hideModal}\n      >\n        <img\n          data-name=\"close\"\n          src=\"/img/close.png\"\n          alt=\"#\"\n          className=\"w-1.8rem h-1.8rem\"\n        />\n      </button>\n      <form className=\"flex flex-wrap\tw-full\" onSubmit={registerSubmit}>\n        <label htmlFor=\"email-input\" className=\"a11y-hidden\">\n          이메일\n        </label>\n        <input\n          className=\"w-full border rounded-lg py-4 px-1.2rem\"\n          id=\"email-input\"\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"이메일\"\n          autoComplete=\"off\"\n          onChange={e => onChange({ e, form: 'register' })}\n          value={register.email}\n        ></input>\n        <span className=\"block py-2 px-4 h-3rem text-airbnb text-1.2rem\">\n          {!register.email.match(emailReg) &&\n            register.email.length > 0 &&\n            '이메일 형식을 맞춰주세요'}\n        </span>\n\n        <label htmlFor=\"name-input\" className=\"a11y-hidden\">\n          이름\n        </label>\n        <input\n          className=\"w-full border rounded-lg py-4 px-1.2rem\"\n          id=\"name-input\"\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"이름\"\n          autoComplete=\"off\"\n          onChange={e => onChange({ e, form: 'register' })}\n          value={register.name}\n        ></input>\n        <span className=\"block py-2 px-4 h-3rem text-airbnb text-1.2rem\">\n          {!register.name.match(nameReg) &&\n            register.name.length > 0 &&\n            '한글로 2글자 이상 작성해주세요'}\n        </span>\n\n        <label htmlFor=\"contact-input\" className=\"a11y-hidden\">\n          휴대폰 번호\n        </label>\n        <input\n          className=\"w-full border rounded-lg py-4 px-1.2rem\"\n          id=\"contact-input\"\n          type=\"text\"\n          name=\"contact\"\n          placeholder=\"휴대폰 번호\"\n          autoComplete=\"off\"\n          onChange={e => onChange({ e, form: 'register' })}\n          value={register.contact}\n        ></input>\n        <span className=\"block py-2 px-4 h-3rem text-airbnb text-1.2rem\">\n          {!register.contact.match(contactReg) &&\n            register.contact.length > 0 &&\n            '휴대폰 번호를 작성해주세요'}\n        </span>\n\n        <label htmlFor=\"birth-input\" className=\"a11y-hidden\">\n          생년월일\n        </label>\n        <input\n          className=\"w-full border rounded-lg py-4 px-1.2rem\"\n          id=\"birth-input\"\n          type=\"date\"\n          min=\"1920-01-01\"\n          max={curDate}\n          name=\"birthDate\"\n          placeholder=\"휴대폰 번호\"\n          autoComplete=\"off\"\n          onChange={e => onChange({ e, form: 'register' })}\n          value={register.birth}\n        ></input>\n        <span className=\"block py-2 px-4 h-3rem text-airbnb text-1.2rem\"></span>\n\n        <label htmlFor=\"password-input\" className=\"a11y-hidden\">\n          비밀번호\n        </label>\n        <input\n          className=\"w-full border rounded-lg py-4 px-1.2rem\"\n          id=\"password-input\"\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"비밀 번호\"\n          autoComplete=\"off\"\n          onChange={e => onChange({ e, form: 'register' })}\n          value={register.password}\n        ></input>\n        <span className=\"block py-2 px-4 h-3rem text-airbnb text-1.2rem\">\n          {!register.password.match(passwordReg) &&\n            register.password.length > 0 &&\n            '특수문자, 문자, 숫자를 포함해서 8자 이상 작성해주세요'}\n        </span>\n\n        <label htmlFor=\"password-confirm-input\" className=\"a11y-hidden\">\n          비밀번호 확인\n        </label>\n        <input\n          className=\"w-full border rounded-lg py-4 px-1.2rem\"\n          id=\"password-confirm-input\"\n          type=\"password\"\n          name=\"passwordConfirm\"\n          placeholder=\"비밀 번호 확인\"\n          autoComplete=\"off\"\n          onChange={e => onChange({ e, form: 'register' })}\n          value={register.passwordConfirm}\n        ></input>\n        <span className=\"block py-2 px-4 h-3rem text-airbnb text-1.2rem\">\n          {register.password !== register.passwordConfirm &&\n            register.passwordConfirm.length > 0 &&\n            '비밀번호가 일치하지 않습니다.'}\n        </span>\n        {/* <Button color='pink' size='lg' className=\"mt-8\" disabled>회원가입</Button> */}\n\n        <span className=\"block py-2 px-4 w-full h-3rem text-airbnb text-center text-1.4rem\">\n          {authError && '중복된 이메일입니다.'}\n        </span>\n        <button\n          className=\"mt-8 w-full h-20 px-6 m-2 text-2xl transform focus:scale-90 bg-airbnb hover:bg-airbnbHover text-white font-bold rounded-2xl transition-all duration-150 shadow-md focus:outline-none\"\n          disabled={emptyInput || invalidValue}\n        >\n          회원가입\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default RegisterForm;\n","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\main\\LoginModal.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\pages\\RoomDetailPage.js",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\pages\\WishListPage.js",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\containers\\WishListContainer.js",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\redux\\modules\\bookmark.js",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\redux\\modules\\payment.js",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\redux\\lib\\api\\bookmark.js",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\redux\\lib\\api\\prices.js",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\redux\\lib\\api\\search.js",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\wishList\\WishListTemplate.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\containers\\AccommodationContainer.js",["573"],"import React, { useEffect, useState } from 'react';\nimport {\n  changeField,\n  initializeForm,\n  authRegister,\n  socialRegisterSubmitAction,\n} from '../redux/modules/auth';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getToken, logout } from '../redux/lib/api/auth';\nimport AccommodationHeader from '../components/common/AccommodationHeader';\nconst AccommodationHeaderContainer = () => {\n  // 로컬스토리지 토큰 유무\n  const [checkedToken, setCheckedToken] = useState(false);\n  // 스크롤 위치\n  const [socialModal, setSocialModal] = useState(false);\n  // 유저 메뉴 모달 초기 상태\n  const [visible, setVisible] = useState(false);\n  // 검색 시작 하기 눌렀을 시 모달 초기 상태\n  const [searchStartState, setSearchStartState] = useState(false);\n  const [checkedLogin, setCheckedLogin] = useState(false);\n\n\n    // // 검색 시작 하기 눌렀을 시 모달 초기 상태\n    // 유저 메뉴 -> 로그인, 회원가입 모달 초기상태,\n    // 하나의 모달 회원가입 폼 모달 띄우는것 때문에 생각정리안된게있어서 일단 객체 상태로 냅둠!\n    const [ authVisible, setAuthVisible ] = useState({\n      // 'login' or 'register'\n      type: null,\n    });\n  \n    const [location, setLocation] = useState(false);\n    const [calendar, setCalendar] = useState(false);\n    const [personnel, setPersonnel] = useState(false);\n    const [flexibleScroll, setFlexibleScroll] = useState({\n      currentScroll: 0,\n      scrollPlus: 0,\n      scrollMinus: 0,\n      scrollStatus: false,\n    });\n   // 검색 시작하기 onClick시 헤더 스타일 변경\n   const showSearchHeader = ({ target }) => {\n    if (target.dataset.name === 'open') {\n      // 상태 true로 바뀌면서 스타일 변경\n      setSearchStartState(true);\n      // 위치 open\n      setLocation(true);\n    }\n   };\n  \n    // 유저 메뉴 모달 open\n    const showModal = () => {\n      setVisible(true);\n    };\n    // 유저 메뉴 -> 로그인 or 회원가입 눌렀을 시 authVisible의 타입에 따라 모달 Open \n    // userMenu -> menuList 컴포넌트에서 auth를 인자로 받아서 type이 로그인인지 회원가입인지 구분\n    const showAuthModal = (auth) => {\n      if (auth === 'login') {\n        // 로그인 or 회원가입 누를 시 유저메뉴 close \n        setVisible(false);\n        // type에 들어온 조건 별로 모달 Open\n        setAuthVisible({\n          ...authVisible,\n          type: 'login',\n        });\n        // open시 login form 초기화\n        dispatch(initializeForm('login'));\n      }\n      else if (auth === 'register') {\n        setVisible(false);\n        setAuthVisible({\n          ...authVisible,\n          type: 'register',\n        });\n      }\n    };\n  \n    // 회원가입 모달에서 아이디가 있으세요? -> 로그인 버튼\n    // 온클릭 이벤트 만들어서 type:'login'\n    // 로그인 모달에서 아이디가 없으세요? -> 회원가입 버튼\n    // type: 'register'\n    const changeModal = (auth) => {\n      if (auth === 'register') {\n        setAuthVisible({\n          ...authVisible,\n          type: 'login',\n        });\n        showAuthModal(auth);\n      }\n      else if (auth === 'login') {\n        setAuthVisible({\n          ...authVisible,\n          type: 'register',\n        });\n        showAuthModal(auth);\n      }\n      else if (auth === 'form') {\n        setAuthVisible({\n          ...authVisible,\n          type: 'form',\n        });\n        // open 시 회원가입 폼 초기화 \n        dispatch(initializeForm('register'));\n      }\n    };\n\n  \n    // 모달 close\n    const hideModal = ({ target }) => {\n      if (target.dataset.name) {\n        setVisible(false);\n        setAuthVisible(false);\n        setSocialModal(false);\n      }\n    };\n  \n//  로그인, 회원가입\n  const dispatch = useDispatch();\n  const state = useSelector(state => state.auth);\n  const { register, login, socialRegister, authError } = state;\n  // 인풋 변경 이벤트 핸들러\n  // 디스트럭처링으로 받기위해서 onChange에서 이벤트 객체와 form을 인자로 넘겨준다\n  // 현재 onChange의 form이 누구인지 구분하기 위해서\n  const onChange = ({ e, form }) => {\n    const { value, name } = e.target;\n    dispatch(\n      changeField({\n        form,\n        key: name,\n        value,\n      }),\n    );\n  };\n  // 폼 등록 이벤트 핸들러\n  const registerSubmit = e => {\n    e.preventDefault();\n    const {\n      name,\n      email,\n      contact,\n      birthDate,\n      password,\n      passwordConfirm,\n    } = register;\n    dispatch(\n      authRegister({\n        name,\n        email,\n        contact,\n        birthDate,\n        password,\n        passwordConfirm,\n      }),\n    );\n  };\n  const socialRegisterSubmit = e => {\n    e.preventDefault();\n    console.log(socialRegister);\n    const { email, name, contact, birthDate, socialId } = socialRegister;\n    dispatch(\n      socialRegisterSubmitAction({ email, name, contact, birthDate, socialId }),\n    );\n  };\n  const loginSubmit = async e => {\n    e.preventDefault();\n    const { email, password } = login;\n    try {\n      const res = await getToken({ email, password });\n      const token = await res.data.token;\n\n      if (token) {\n        localStorage.setItem('token', token);\n        setCheckedToken(true);\n        setAuthVisible(false);\n        setCheckedLogin(false);\n      }\n    } catch (e) {\n      setCheckedLogin(true);\n    }\n  };\n  const userLogout = e => {\n    logout();\n    localStorage.removeItem('token');\n    setCheckedToken(false);\n  };\n\n  useEffect(() => {\n    // 로그인이나 회원가입 성공 시 모달창 Close\n    // useEffect에서 하는 이유는 dispatch가 비동기라서 에러객체가 담기는 시점을 알 수 없기 때문에\n    if (authError === null) {\n      setAuthVisible(false);\n    }\n    // 구글로 회원가입 시 서버에서 받아온 유저정보에 socialId가 있다면 회원가입 모달창 open\n    // console.log('socialRegister', socialRegister.socialId);\n    if (socialRegister.socialId) {\n      setSocialModal(true);\n    }\n    // 토큰이 없디면 유저메뉴 view 변경(비 로그인 시)\n    if (localStorage.getItem('token') === null) {\n      setVisible(false);\n      setCheckedToken(false);\n    }\n    // 토큰이 있다면 유저메뉴 view 변경(로그인 시)\n    if (localStorage.getItem('token') !== null) {\n      setVisible(false);\n      setCheckedToken(true);\n    }\n    function wathchFlexibleScroll() {\n      if (flexibleScroll.scrollPlus < window.scrollY || window.scrollY < flexibleScroll.scrollMinus) {\n        setSearchStartState(false);\n        setLocation(false);\n        setCalendar(false);\n        setPersonnel(false);\n        setFlexibleScroll({\n          ...flexibleScroll,\n          currentScroll: 0,\n          scrollPlus: 0,\n          scrollMinus: 0,\n        });\n      }\n    }\n    wathchFlexibleScroll();\n    window.addEventListener('scroll', wathchFlexibleScroll);\n  }, [authError, socialRegister.socialId, checkedToken]);\n  // }, [auth, authError, dispatch]);\n  return (\n    <>\n      <AccommodationHeader\n        showModal={showModal}\n        hideModal={hideModal}\n        changeModal={changeModal}\n        authVisible={authVisible}\n        visible={visible}\n        showAuthModal={showAuthModal}\n        showSearchHeader={showSearchHeader}\n        searchStartState={searchStartState}\n        location={location}\n        calendar={calendar}\n        personnel={personnel}\n        setLocation={setLocation}\n        setPersonnel={setPersonnel}\n        setCalendar={setCalendar}\n        socialModal={socialModal}\n        onChange={onChange}\n        registerSubmit={registerSubmit}\n        loginSubmit={loginSubmit}\n        socialRegisterSubmit={socialRegisterSubmit}\n        userLogout={userLogout}\n        state={state}\n        checkedToken={checkedToken}\n        checkedLogin={checkedLogin}\n      />  \n    </>\n  );\n};\nexport default AccommodationHeaderContainer;\n","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\RoomDetailDateEditPopup.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\wishList\\WishListCard.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\common\\AccommodationHeader.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\common\\AccommodationSearchHeader.jsx",["574"],"import styled, { keyframes } from 'styled-components';\nimport HeaderGuestEditModal from '../common/HeaderGuestEditModal';\nimport { BiSearch } from 'react-icons/bi';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router';\nimport HeaderCalendar from '../main/HeaderCalendar';\nconst scrollUp = keyframes`\nfrom {\n  transform: scale(0.3, 0.75) translateY(-8rem);\n}\nto {\n  transform: scale(1, 1) translateY(0);\n}\n`;\nconst scrollDown = keyframes`\nfrom {\n  transform: scale(1.1, 1);\n}\nto {\n  transform: scale(1, 1);\n  visibility: hidden;\n}\n`;\nconst SearchHeader = styled.form`\n  position: relative;\n  display: flex;\n  cursor: pointer;\n  border: 1px solid #ccc;\n  border-radius: 999rem;\n  background: #fff;\n  width: ${({ searchStartState }) => (searchStartState ? '85rem' : '32rem')};\n  height: ${({ searchStartState }) => (searchStartState ? '7rem' : '4.8rem')};\n  margin-top: ${({ searchStartState }) => (searchStartState ? '5rem' : '0')};\n  animation-duration: 0.1s;\n  animation-timing-function: ease-out;\n  animation-name: ${({ searchStartState }) =>\n    searchStartState ? scrollUp : scrollDown};\n`;\nconst Button = styled.button`\n  display: ${({ searchStartState }) => (searchStartState ? 'block' : 'none')};\n  :hover {\n    background: #ebebeb;\n    border-radius: 999rem;\n    z-index: 1;\n  }\n  :focus {\n    background: #fff;\n    border-radius: 999rem;\n    box-shadow: rgba(0, 0, 0, 0.15) 0px 16px 32px,\n      rgba(0, 0, 0, 0.1) 0px 3px 8px !important;\n    transform: scale(1.03);\n  }\n`;\n// 서치 헤더 (위치 어디로 여행가세요?)\nconst SearchLocation = styled.div`\n  position: absolute;\n  top: 8rem;\n  width: 50.5rem;\n  border-radius: 2.5rem;\n  background: #fff;\n  display: flex;\n  align-items: center;\n  box-shadow: rgba(0, 0, 0, 0.08) 0px 1px 12px;\n`;\n// 서치 헤더 (캘린더)\nconst SearchCalendar = styled.div`\n  position: absolute;\n  top: 8rem;\n  width: 100%;\n  border-radius: 2.5rem;\n  background: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: rgba(0, 0, 0, 0.08) 0px 1px 12px;\n`;\n// 서치 헤더 (인원 수)\nconst SearchPersonnel = styled.div`\n  position: absolute;\n  top: 8rem;\n  right: 0;\n  width: 38rem;\n  border-radius: 2.5rem;\n  background: #fff;\n  display: flex;\n  align-items: center;\n  box-shadow: rgba(0, 0, 0, 0.08) 0px 1px 12px;\n`;\nconst LocationButton = styled.button.attrs(() => ({ type: 'button' }))`\n  width: 100%;\n  /* height: 1rem; */\n  margin-top: 1.5rem;\n  margin-bottom: 1.5rem;\n  padding: 1rem 2rem;\n  display: flex;\n  align-items: center;\n  :hover {\n    background: #f7f7f7;\n    border-radius: 1rem;\n  }\n`;\nconst SearchButton = styled.button.attrs(() => ({ type: 'button' }))`\n  position: absolute;\n  right: 0;\n  top: -0.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 4.8rem;\n  height: 4.8rem;\n  border-radius: 999rem;\n  background: #ff385c;\n  :hover {\n    background: #de1661;\n    transition: ease-in-out;\n  }\n`;\nconst SubmitButton = styled.button.attrs(() => ({ type: 'button' }))`\n  position: absolute;\n  right: 0;\n  top: -0.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 8.5rem;\n  height: 4.8rem;\n  border-radius: 999rem;\n  background: #ff385c;\n  :hover {\n    background: #de1661;\n    transition: ease-in-out;\n  }\n`;\nconst AccommodationSearchHeader = ({\n  showSearchHeader,\n  searchStartState,\n  setLocation,\n  setCalendar,\n  setPersonnel,\n  location,\n  calendar,\n  personnel,\n}) => {\n  const [gu, setGu] = useState(null);\n  const [currentLocation, setCurrentLocation] = useState({\n    lat: null,\n    lng: null,\n  });\n  const [count, setCount] = useState({\n    adultNum: 0,\n    childNum: 0,\n    infantNum: 0,\n    status: false,\n  });\n\n  const url = new URL(window.location.href);\n\n  const history = useHistory();\n  // 헤더 위치 (어디로 여행가세요?)\n  const showLocation = ({ target }) => {\n    if (target.dataset.name === 'location') {\n      setLocation(true);\n      setCalendar(false);\n      setPersonnel(false);\n    }\n  };\n  // 헤더 켈린더 ( 체크인, 체크아웃 )\n  const showCalendar = ({ target }) => {\n    if (target.dataset.name === 'calendar') {\n      setCalendar(true);\n      setLocation(false);\n      setPersonnel(false);\n    }\n  };\n  // 헤더 인원 수\n  const showPersonnel = ({ target }) => {\n    if (target.dataset.name === 'personnel') {\n      setPersonnel(true);\n      setLocation(false);\n      setCalendar(false);\n    }\n  };\n  // 헤더에 검색 버튼 누를 시 location: true 하면서 검색 버튼 스타일 변경\n  const searchOnclick = ({ target }) => {\n    if (target.dataset.name === 'search') {\n      setLocation(true);\n    }\n  };\n  const onSubmit = e => {\n    e.preventDefault();\n  };\n  const getCurrentLocation = async e => {\n    navigator.geolocation.getCurrentPosition(position => {\n      setCurrentLocation({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude,\n      });\n    });\n  };\n  const [dateRange, setDateRange] = useState({\n    // 체크인 날짜의 초기값 지정\n    startDate: null,\n    // 체크아웃 날짜의 초기값 지정\n    endDate: null,\n  });\n  \n    // 달력 날짜 포커스 상태\n\n  const [focus, setFocus] = useState('startDate');\n  // 달력 날짜 변경 함수\n  const handleOnDateChange = ({ startDate, endDate }) => {\n    setDateRange({\n      startDate: startDate,\n      endDate: endDate,\n    });\n  };\n  // 게스트 증가 함수\n  const increaseGuestNum = type => {\n    if (type === 'adultNum' && count.adultNum === 5) return;\n    else if (type === 'childNum' && count.childNum === 5) return;\n    else if (type === 'infantNum' && count.infantNum === 5) return;\n    setCount({ ...count, [type]: count[type] + 1, status: true });\n  };\n  // 게스트 감소 함수\n  const decreaseGuestNum = type => {\n    if (count[type] === 0) return;\n    setCount({ ...count, [type]: count[type] - 1 });\n    // 어른이 0명이 되면 어린이와 아이 인원 초기화\n    if (count.adultNum === 1) {\n      setCount({\n        adultNum: 0,\n        childNum: 0,\n        infantNum: 0,\n      });\n    }\n  };\n  const searchResult = e => {\n    if (gu !== null) {\n      history.push(\n        `/accommodations/?searchKeyword=${gu}&ckeckIn=${\n          dateRange.startDate !== null &&\n          dateRange.startDate.format('YYYY-MM-DD')\n        }&checkout=${\n          dateRange.endDate !== null && dateRange.endDate.format('YYYY-MM-DD')\n        }&guestNum=${count.adultNum + count.childNum}`,\n      );\n    }\n  };\n  useEffect(() => {\n    if (currentLocation.lat !== null && currentLocation.lng !== null) {\n      async function getAddress() {\n        const res = await axios.get(\n          `https://maps.googleapis.com/maps/api/geocode/json?latlng=${currentLocation.lat},${currentLocation.lng}&key=AIzaSyA6XrrGClq-qmlmWDQCWGsgau4tzbQcINU`,\n        );\n        if (res) {\n          setGu(res.data.results[4].formatted_address.substr(10));\n        }\n      }\n      getAddress();\n    }\n  }, [currentLocation, gu]);\n  return (\n    <SearchHeader\n      onSubmit={onSubmit}\n      searchStartState={searchStartState}\n      id=\"test\"\n    >\n      <Button\n        className=\"w-27rem text-left\"\n        searchStartState={searchStartState}\n        onClick={showLocation}\n        data-name=\"location\"\n      >\n        <div className=\"border-r px-14\" data-name=\"location\">\n          <b className=\"block text-1.2rem\" data-name=\"location\">\n            위치\n          </b>\n          <label\n            className=\"a11y-hidden\"\n            htmlFor=\"search-input\"\n            data-name=\"location\"\n          >\n            여행지를 골라주세요.\n          </label>\n          <input\n            id=\"search-input\"\n            type=\"text\"\n            placeholder=\"어디로 여행가세요?\"\n            className=\"block text-1.6rem text-#717171 bg-transparent\"\n            data-name=\"location\"\n            defaultValue={gu && gu}\n          ></input>\n        </div>\n      </Button>\n      <Button\n        test={true}\n        startDate={dateRange.startDate}\n        className=\"w-18rem text-left\"\n        searchStartState={searchStartState}\n        onClick={showCalendar}\n        data-name=\"calendar\"\n      >\n        <div className=\"border-r px-6\" data-name=\"calendar\">\n          <b className=\"block text-1.2rem\" data-name=\"calendar\">\n            체크인\n          </b>\n          <span className=\"block text-1.4rem text-#717171\" data-name=\"calendar\">\n            {dateRange.startDate\n              ? dateRange.startDate.format('YYYY-MM-DD')\n              : '날짜 추가'}\n          </span>\n        </div>\n      </Button>\n      <Button\n        endDate={dateRange.endDate}\n        className=\"w-18rem text-left\"\n        searchStartState={searchStartState}\n        onClick={showCalendar}\n        data-name=\"calendar\"\n      >\n        <div className=\"border-r px-6\" data-name=\"calendar\">\n          <b className=\"block text-1.2rem\" data-name=\"calendar\">\n            체크아웃\n          </b>\n          <span className=\"block text-1.4rem text-#717171\" data-name=\"calendar\">\n            {dateRange.endDate\n              ? dateRange.endDate.format('YYYY-MM-DD')\n              : '날짜 추가'}\n          </span>\n        </div>\n      </Button>\n      <Button\n        className=\"w-22rem text-left px-6\"\n        searchStartState={searchStartState}\n        onClick={showPersonnel}\n        data-name=\"personnel\"\n      >\n        <div className=\"relative\" data-name=\"personnel\">\n          <b className=\"block text-1.2rem\" data-name=\"personnel\">\n            인원\n          </b>\n          <span\n            className=\"block text-1.4rem text-#717171\"\n            data-name=\"personnel\"\n          >\n            {count.adultNum !== 0\n              ? `게스트 ${count.adultNum + count.childNum + count.infantNum}명`\n              : '게스트 추가'}\n          </span>\n          {location || calendar || personnel ? (\n            <SubmitButton onClick={searchResult}>\n              <BiSearch size={20} className=\" text-white\" />\n              <span className=\"text-white text-1.6rem ml-0.4rem\">검색</span>\n            </SubmitButton>\n          ) : (\n            <SearchButton\n              data-name=\"open\"\n              location={location}\n              calendar={calendar}\n              personnel={personnel}\n              onClick={searchOnclick}\n            >\n              <BiSearch size={20} className=\" text-white\" data-name=\"search\" />\n            </SearchButton>\n          )}\n        </div>\n      </Button>\n      {!searchStartState && (\n        <div\n          className=\"flex w-full justify-between items-center pr-0.8rem\"\n          onClick={showSearchHeader}\n          data-name=\"open\"\n        >\n          <span className=\"text-1.4rem ml-2rem\" data-name=\"open\">\n            검색 시작하기\n          </span>\n          <button\n            className=\"flex justify-center items-center w-3rem h-3rem rounded-full bg-airbnb hover:bg-#DE1661 transition transform hover:ease-in-out \"\n            data-name=\"open\"\n          >\n            <BiSearch className=\" w-6 h-6 text-white\" />\n          </button>\n        </div>\n      )}\n      {location && (\n        <SearchLocation>\n          <LocationButton onClick={getCurrentLocation}>\n            <figure>\n              <img\n                className=\"w-4.5rem h-4.5rem rounded-xl \"\n                src={'/img/mapIcon.jpg'}\n                alt=\"어디로 여행가세요 아이콘\"\n              />\n              <figcaption className=\"a11y-hidden\">\n                어디로 여행가세요?\n              </figcaption>\n            </figure>\n            <span className=\"text-1.6rem ml-1.8rem text-#727272\">\n              가까운 여행지 둘러보기\n            </span>\n          </LocationButton>\n        </SearchLocation>\n      )}\n      {calendar && (\n        <SearchCalendar>\n          <HeaderCalendar\n            handleOnDateChange={handleOnDateChange}\n            dateRange={dateRange}\n            focus={focus}\n            setFocus={setFocus}\n          />\n        </SearchCalendar>\n      )}\n      {personnel && (\n        <SearchPersonnel>\n          <HeaderGuestEditModal\n            count={count}\n            setCount={setCount}\n            increaseGuestNum={increaseGuestNum}\n            decreaseGuestNum={decreaseGuestNum}\n          />\n        </SearchPersonnel>\n      )}\n    </SearchHeader>\n  );\n};\nexport default AccommodationSearchHeader;\n","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\common\\SocialRegisterModal.jsx",["575"],"import React from 'react';\n\n\nconst SocialRegisterModal = ({ hideModal, onChange, socialRegisterSubmit, state }) => {\n  const { socialRegister, authError } = state;\n  const emailReg = /([\\w-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\n  const nameReg = /^[가-힇]{2,30}$/;\n  const contactReg = /^\\d{3}\\d{3,4}\\d{4}$/;\n  // 오늘 날짜 Get (생년월일 오늘 날짜 이전만 선택 가능하게 하기 위해서)\n  const date = new Date();\n  // 년, 월, 일 (월, 일은 한자리 수 일 경우 앞에 + 0,  ex 1995-02-02)\n  const year = date.getUTCFullYear();\n  let month = date.getMonth() + 1;\n  month = month >= 10 ? month : '0' + month;\n  let day = date.getDate();\n  day = day >= 10 ? day : '0' + day;\n  // 오늘 날짜 2021-02-18\n  const curDate = year + '-' + month + '-' + day;\n\n  return (\n    <div\n      onClick={hideModal}\n      data-name=\"close\"\n      className=\"w-full h-full overflow-hidden flex bg-modal justify-center items-center text-white fixed top-0 z-50\"\n    >\n      <div className=\"w-56rem z-50 bg-white border rounded-2xl flex flex-col overflow-y-auto text-#727272 text-center p-8 relative text-1.4rem\">\n      <h1 className=\"a11y-hidden\">회원가입 팝업창</h1>\n          <h2 className=\"text-1.6rem font-extrabold border-b pb-8 mb-2rem\">회원가입 완료</h2>\n          <button\n            data-name=\"close\"\n            className=\"flex w-3.6rem h-3.6rem absolute top-5 left-4 justify-center items-center rounded-50% hover:bg-#f7f7f7\"\n            onClick={hideModal}>\n            <img\n              data-name=\"close\"\n              src=\"/img/close.png\"\n              alt=\"#\"\n              className=\"w-1.8rem h-1.8rem\"\n            />\n      </button>\n        <form onSubmit={socialRegisterSubmit} className=\"flex flex-wrap\tw-full\" >\n        <label htmlFor=\"email-input\" className=\"a11y-hidden\">이메일</label>\n        <input className=\"w-full border rounded-lg py-4 px-1.2rem\" id=\"email-input\" type=\"text\" name=\"email\" placeholder=\"이메일\" autoComplete=\"off\" onChange={(e) => onChange({ e, form: 'socialRegister' })} value={socialRegister.email}></input>\n        <span className=\"block py-2 px-4 h-3rem text-airbnb text-1.2rem\">{!socialRegister.email.match(emailReg) && socialRegister.email.length > 0 && '이메일 형식을 맞춰주세요'}</span>\n\n        <label htmlFor=\"name-input\" className=\"a11y-hidden\">이름</label>\n        <input className=\"w-full border rounded-lg py-4 px-1.2rem\" id=\"name-input\" type=\"text\" name=\"name\" placeholder=\"이름\" autoComplete=\"off\" onChange={(e) => onChange({ e, form: 'socialRegister' })} value={socialRegister.name}></input>\n        <span className=\"block py-2 px-4 h-3rem text-airbnb text-1.2rem\">{!socialRegister.name.match(nameReg) && socialRegister.name.length > 0 && '한글로 2글자 이상 작성해주세요'}</span>\n\n        <label htmlFor=\"contact-input\" className=\"a11y-hidden\">휴대폰 번호</label>\n        <input className=\"w-full border rounded-lg py-4 px-1.2rem\" id=\"contact-input\" type=\"text\" name=\"contact\" placeholder=\"휴대폰 번호\" autoComplete=\"off\" onChange={(e) => onChange({e, form:'socialRegister'})} value={socialRegister.contact}></input>\n        <span className=\"block py-2 px-4 h-3rem text-airbnb text-1.2rem\">{!socialRegister.contact.match(contactReg) && socialRegister.contact.length > 0 && '휴대폰 번호를 작성해주세요'}</span>\n\n        <label htmlFor=\"birth-input\" className=\"a11y-hidden\">생년월일</label>\n        <input className=\"w-full border rounded-lg py-4 px-1.2rem\" id=\"birth-input\" type=\"date\" min=\"1920-01-01\" max={curDate}  name=\"birthDate\" placeholder=\"휴대폰 번호\" autoComplete=\"off\" onChange={(e) => onChange({e, form:'socialRegister'})} value={socialRegister.birthDate}></input>\n          <span className=\"block py-2 px-4 h-3rem text-airbnb text-1.2rem\"></span>\n          \n          <span className=\"block py-2 px-4 h-3rem text-airbnb text-1.2rem\">{authError && '중복된 이메일입니다.'}</span>\n\n\n        <button className=\"mt-8 w-full h-20 px-6 m-2 text-2xl transform focus:scale-90 bg-airbnb hover:bg-airbnbHover text-white font-bold rounded-2xl transition-all duration-150 shadow-md focus:outline-none\">회원가입</button>\n\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default SocialRegisterModal;\n","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\main\\HeaderSearch.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\common\\HeaderGuestEditModal.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\main\\HeaderCalendar.jsx",["576","577"],"import React, { useState } from 'react';\nimport { DayPickerRangeController } from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport 'moment/locale/ko';\nimport SVG from '../../assets/svg';\nimport Moment from 'moment';\nimport { extendMoment } from 'moment-range';\n\nconst HeaderCalendar = ({dateRange, handleOnDateChange, focus, setFocus}) => {\n  const { startDate, endDate } = dateRange;\n\n\n  // 테스트용 더미 데이터\n  const bookedDate = [\n    { id: '1', startDate: '2021-03-08', endDate: '2021-03-11' },\n    { id: '2', startDate: '2021-03-20', endDate: '2021-03-22' },\n  ];\n\n  // moment-range를 통해 moment 생성 함수를 받아온다 -> moment() 호출 시 moment객체 생성\n  const moment = extendMoment(Moment);\n\n  // 오늘 이전 날짜 비활성화\n  const isOutsideRange = (day = moment()) => {\n    return moment().diff(day, 'days') > 0;\n  };\n\n  // const { startDate, endDate } = dateRange;\n\n  // 예약이 된 날짜를 비활성화\n  // const isDayBlocked = date => {\n  //   let bookedRanges = [];\n  //   let blocked;\n\n  //   bookedRanges = bookedDate.map(booked =>\n  //     moment.range(booked.startDate, booked.endDate),\n  //   );\n\n  //   blocked = bookedRanges.find(bookedRange =>\n  //     bookedRange.contains(date, { excludeEnd: true }),\n  //   );\n\n  //   return blocked;\n  // };\n\n  return (\n    <>\n      <DayPickerRangeController\n        // isDayBlocked={isDayBlocked} // 예약 날짜 비활성화\n        isOutsideRange={isOutsideRange} // 이전 날짜 비활성화\n        startDate={startDate} // 체크인 날짜\n        onDatesChange={handleOnDateChange} // 날짜 변경\n        endDate={endDate} // 체크아웃 날짜\n        numberOfMonths={2}\n        focusedInput={focus}\n        onFocusChange={focus => setFocus(focus || 'startDate')} // 포커스 변경\n        minimumNights={0}\n        monthFormat=\"YYYY년 MMMM\"\n        navPrev={\n          <div className=\"DayPickerNavigation_button__horizontalDefault DayPickerNavigation_leftButton__horizontalDefault\">\n            <SVG name=\"prev\" width=\"10px\" height=\"10px\" viewBox=\"0 0 18 18\" />\n          </div>\n        }\n        navNext={\n          <div className=\"DayPickerNavigation_button__horizontalDefault DayPickerNavigation_rightButton__horizontalDefault\">\n            <SVG name=\"next\" width=\"10px\" height=\"10px\" viewBox=\"0 0 18 18\" />\n          </div>\n        }\n      />\n    </>\n  );\n};\nexport default HeaderCalendar;\n","C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\roomDetail\\RoomDetailRefundModal.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\modify\\ModifyHeader.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\main\\RecommendPopup.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\common\\CommonFooter.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\containers\\SimpleHeaderContainer.js",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\main\\MainFooter.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\common\\SimpleHeader.jsx",[],"C:\\Users\\LEMON\\Documents\\dev\\SweetyPie_Frontend\\src\\components\\modify\\ModifyDisabledModal.jsx",[],{"ruleId":"578","replacedBy":"579"},{"ruleId":"580","replacedBy":"581"},{"ruleId":"582","severity":1,"message":"583","line":26,"column":25,"nodeType":"584","messageId":"585","endLine":26,"endColumn":30},{"ruleId":"582","severity":1,"message":"586","line":26,"column":32,"nodeType":"584","messageId":"585","endLine":26,"endColumn":39},{"ruleId":"582","severity":1,"message":"587","line":12,"column":9,"nodeType":"584","messageId":"585","endLine":12,"endColumn":17},{"ruleId":"582","severity":1,"message":"588","line":9,"column":26,"nodeType":"584","messageId":"585","endLine":9,"endColumn":44},{"ruleId":"582","severity":1,"message":"589","line":4,"column":20,"nodeType":"584","messageId":"585","endLine":4,"endColumn":27},{"ruleId":"590","severity":1,"message":"591","line":238,"column":6,"nodeType":"592","endLine":238,"endColumn":55,"suggestions":"593"},{"ruleId":"582","severity":1,"message":"594","line":4,"column":8,"nodeType":"584","messageId":"585","endLine":4,"endColumn":19},{"ruleId":"582","severity":1,"message":"583","line":12,"column":25,"nodeType":"584","messageId":"585","endLine":12,"endColumn":30},{"ruleId":"582","severity":1,"message":"595","line":4,"column":10,"nodeType":"584","messageId":"585","endLine":4,"endColumn":20},{"ruleId":"582","severity":1,"message":"596","line":41,"column":11,"nodeType":"584","messageId":"585","endLine":41,"endColumn":14},{"ruleId":"582","severity":1,"message":"597","line":14,"column":5,"nodeType":"584","messageId":"585","endLine":14,"endColumn":13},{"ruleId":"582","severity":1,"message":"598","line":68,"column":9,"nodeType":"584","messageId":"585","endLine":68,"endColumn":21},{"ruleId":"582","severity":1,"message":"599","line":2,"column":10,"nodeType":"584","messageId":"585","endLine":2,"endColumn":20},{"ruleId":"582","severity":1,"message":"600","line":6,"column":8,"nodeType":"584","messageId":"585","endLine":6,"endColumn":16},{"ruleId":"582","severity":1,"message":"601","line":8,"column":7,"nodeType":"584","messageId":"585","endLine":8,"endColumn":19},{"ruleId":"602","severity":1,"message":"603","line":102,"column":13,"nodeType":"604","endLine":102,"endColumn":17},{"ruleId":"602","severity":1,"message":"603","line":105,"column":13,"nodeType":"604","endLine":105,"endColumn":17},{"ruleId":"602","severity":1,"message":"603","line":108,"column":13,"nodeType":"604","endLine":108,"endColumn":17},{"ruleId":"582","severity":1,"message":"605","line":46,"column":3,"nodeType":"584","messageId":"585","endLine":46,"endColumn":28},{"ruleId":"582","severity":1,"message":"606","line":47,"column":3,"nodeType":"584","messageId":"585","endLine":47,"endColumn":28},{"ruleId":"590","severity":1,"message":"607","line":273,"column":6,"nodeType":"592","endLine":273,"endColumn":77,"suggestions":"608"},{"ruleId":"578","replacedBy":"609"},{"ruleId":"580","replacedBy":"610"},{"ruleId":"582","severity":1,"message":"611","line":1,"column":27,"nodeType":"584","messageId":"585","endLine":1,"endColumn":33},{"ruleId":"582","severity":1,"message":"612","line":1,"column":35,"nodeType":"584","messageId":"585","endLine":1,"endColumn":44},{"ruleId":"582","severity":1,"message":"612","line":1,"column":17,"nodeType":"584","messageId":"585","endLine":1,"endColumn":26},{"ruleId":"582","severity":1,"message":"586","line":41,"column":5,"nodeType":"584","messageId":"585","endLine":41,"endColumn":12},{"ruleId":"582","severity":1,"message":"613","line":57,"column":17,"nodeType":"584","messageId":"585","endLine":57,"endColumn":25},{"ruleId":"582","severity":1,"message":"614","line":1,"column":10,"nodeType":"584","messageId":"585","endLine":1,"endColumn":14},{"ruleId":"578","replacedBy":"615"},{"ruleId":"580","replacedBy":"616"},{"ruleId":"582","severity":1,"message":"617","line":2,"column":10,"nodeType":"584","messageId":"585","endLine":2,"endColumn":14},{"ruleId":"582","severity":1,"message":"618","line":2,"column":16,"nodeType":"584","messageId":"585","endLine":2,"endColumn":26},{"ruleId":"578","replacedBy":"619"},{"ruleId":"580","replacedBy":"620"},{"ruleId":"582","severity":1,"message":"621","line":3,"column":41,"nodeType":"584","messageId":"585","endLine":3,"endColumn":46},{"ruleId":"582","severity":1,"message":"622","line":4,"column":40,"nodeType":"584","messageId":"585","endLine":4,"endColumn":47},{"ruleId":"582","severity":1,"message":"623","line":6,"column":10,"nodeType":"584","messageId":"585","endLine":6,"endColumn":21},{"ruleId":"582","severity":1,"message":"624","line":14,"column":18,"nodeType":"584","messageId":"585","endLine":14,"endColumn":27},{"ruleId":"578","replacedBy":"625"},{"ruleId":"580","replacedBy":"626"},{"ruleId":"627","severity":1,"message":"628","line":5,"column":26,"nodeType":"629","messageId":"630","endLine":5,"endColumn":27,"suggestions":"631"},{"ruleId":"590","severity":1,"message":"632","line":223,"column":6,"nodeType":"592","endLine":223,"endColumn":56,"suggestions":"633"},{"ruleId":"582","severity":1,"message":"634","line":157,"column":9,"nodeType":"584","messageId":"585","endLine":157,"endColumn":12},{"ruleId":"627","severity":1,"message":"628","line":6,"column":26,"nodeType":"629","messageId":"630","endLine":6,"endColumn":27,"suggestions":"635"},{"ruleId":"582","severity":1,"message":"636","line":1,"column":17,"nodeType":"584","messageId":"585","endLine":1,"endColumn":25},{"ruleId":"582","severity":1,"message":"637","line":15,"column":9,"nodeType":"584","messageId":"585","endLine":15,"endColumn":19},"no-native-reassign",["638"],"no-negated-in-lhs",["639"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'location' is assigned a value but never used.","'accommodationError' is assigned a value but never used.","'getUser' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authError' and 'flexibleScroll'. Either include them or remove the dependency array. You can also do a functional update 'setFlexibleScroll(f => ...)' if you only need 'flexibleScroll' in the 'setFlexibleScroll' call.","ArrayExpression",["640"],"'reservation' is defined but never used.","'IconButton' is defined but never used.","'res' is assigned a value but never used.","'memberId' is assigned a value but never used.","'removeReview' is assigned a value but never used.","'AiFillStar' is defined but never used.","'Carousel' is defined but never used.","'StyledSlider' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'MODIFY_MEMBERINFO_SUCCESS' is assigned a value but never used.","'MODIFY_MEMBERINFO_FAILURE' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'flexibleScroll', 'setCalendar', 'setLocation', and 'setPersonnel'. Either include them or remove the dependency array. If 'setLocation' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["641"],["638"],["639"],"'useRef' is defined but never used.","'useEffect' is defined but never used.","'setCoord' is assigned a value but never used.","'Link' is defined but never used.",["638"],["639"],"'Grid' is defined but never used.","'Typography' is defined but never used.",["638"],["639"],"'Ticks' is defined but never used.","'MuiTick' is defined but never used.","'useSelector' is defined but never used.","'setDomain' is assigned a value but never used.",["638"],["639"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["642","643"],"React Hook useEffect has a missing dependency: 'flexibleScroll'. Either include it or remove the dependency array. You can also do a functional update 'setFlexibleScroll(f => ...)' if you only need 'flexibleScroll' in the 'setFlexibleScroll' call.",["644"],"'url' is assigned a value but never used.",["645","646"],"'useState' is defined but never used.","'bookedDate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"647","fix":"648"},{"desc":"649","fix":"650"},{"messageId":"651","fix":"652","desc":"653"},{"messageId":"654","fix":"655","desc":"656"},{"desc":"657","fix":"658"},{"messageId":"651","fix":"659","desc":"653"},{"messageId":"654","fix":"660","desc":"656"},"Update the dependencies array to be: [socialRegister.socialId, checkedToken, dispatch, authError, flexibleScroll]",{"range":"661","text":"662"},"Update the dependencies array to be: [authError, socialRegister.socialId, checkedToken, setSearchStartState, flexibleScroll, setLocation, setCalendar, setPersonnel]",{"range":"663","text":"664"},"removeEscape",{"range":"665","text":"666"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"667","text":"668"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [authError, socialRegister.socialId, checkedToken, flexibleScroll]",{"range":"669","text":"670"},{"range":"671","text":"666"},{"range":"672","text":"668"},[6123,6172],"[socialRegister.socialId, checkedToken, dispatch, authError, flexibleScroll]",[7053,7124],"[authError, socialRegister.socialId, checkedToken, setSearchStartState, flexibleScroll, setLocation, setCalendar, setPersonnel]",[169,170],"",[169,169],"\\",[6045,6095],"[authError, socialRegister.socialId, checkedToken, flexibleScroll]",[189,190],[189,189]]